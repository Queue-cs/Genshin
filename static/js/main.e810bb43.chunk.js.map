{"version":3,"sources":["../../genshin-db/src/language.js","../../genshin-db/src/folder.js","../../genshin-db/src/getdata.js","../../genshin-db/src/main.js","../../genshin-db/src/altnames.js","../../genshin-db/src/helper.js","components/Characters/Characters.js","components/NavBar.js","components/Tags.js","components/Icon.js","Utils.js","components/Characters/CharactersList.js","components/Characters/CharacterInfoHeader.js","components/Characters/CharacterInfoStats.js","components/Characters/CharacterInfoTalent.js","components/Characters/CharacterInfoPassive.js","components/Characters/CharacterInfoConstellations.js","components/ItemIcon.js","components/Characters/CharacterInfoAscCosts.js","components/Characters/CharacterinfoTalentCosts.js","components/Characters/CharacterInfo.js","components/Updates.js","components/About.js","components/App.js","store/Store.js","index.js"],"names":["fuzzysort","require","languageMap","languages","Object","values","languageCodes","keys","languageDict","concat","module","exports","LanguagesEnum","localeMap","format","langs","input","dict","result","go","limit","undefined","target","length","autocompleteLanguage","Array","isArray","tmp","l","includes","push","characters","talents","constellations","weapons","foods","materials","weaponmaterialtypes","talentmaterialtypes","artifacts","domains","enemies","rarity","elements","alldata","allindex","allimage","allurl","allstats","allcurve","availableimage","availableurl","availablestats","calcStatsMap","filename","mystats","getStats","mycurve","getCurve","level","ascension","parseInt","isNaN","getPromotionBonus","promotion","phase","output","hp","base","curve","attack","defense","specialized","critrate","critdmg","maxlevel","getImage","folder","e","promotions","index","Number","isFinite","getData","lang","images","url","getURL","stats","combat1","parameters","data","myparams","prop","attributes","setAttributesTalent","getIndex","language","Folder","altnames","genshin","baseoptions","matchAltNames","matchAliases","matchCategories","verboseCategories","queryLanguages","resultLanguage","sanitizeOptions","opts","sanOpts","forEach","searchFolder","query","getfilename","assign","autocomplete","querylangs","names","getAltNamesList","aliases","categories","buildQueryDict","langindex","getFilename","reslangindex","reduce","accum","res","namemap","setOptions","options","getOptions","JSON","parse","stringify","character","talent","weapon","weaponmaterialtype","talentmaterialtype","material","element","constellation","artifact","food","domain","enemy","helper","Language","Languages","Folders","addAltName","altname","removeAltNames","setAltNameLimits","setLimit","altnameindex","count","baselimits","maxLength","maxCount","isValidFolder","isValidLanguage","isEmpty","obj","x","hasOwnProperty","limits","isValidAltName","isValidFilename","str","normalize","replace","toLowerCase","substat","subvalue","effect","numbers","i","acc","curr","RegExp","NavLinks","onClick","Fragment","Nav","Item","eventKey","componentClass","Link","to","NavBar","observer","props","toggleMenu","setState","showMenu","state","onWindowScroll","currentScroll","window","pageYOffset","delta","prevScroll","Math","abs","hide","top","addEventListener","this","removeEventListener","store","isXS","activeKey","windowWidth","location","pathname","barStyle","height","linksStyle","className","style","vertical","Navbar","Body","Header","padding","Button","appearance","Icon","icon","size","React","Component","Tags","list","selected","onSelect","blocks","key","isActive","indexOf","active","Function","ImgIcon","src","img","alt","width","title","val","round","FormatNumber","type","string","replaceAll","history","loc","toTop","fromDashboard","scrollTo","getPrototypeOf","proto","prototype","toString","call","visionList","weaponList","rarityList","CharactersList","onSearch","search","setTags","newValue","tags","tagIndex","splice","setVisions","vision","setWeapons","setRarity","charaRender","weapontype","talentName","costs","stars","FlexboxGrid","name","showList","Utils","Redirect","colspan","visions","charactersDB","rendered","charaName","InputGroup","Input","value","onChange","Addon","PureComponent","CharacterInfoHeader","displayData","gender","body","birthday","region","affiliation","cv","fandom","href","rows","isOdd","isPlainObject","tempValue","key2","Col","mdHidden","lgHidden","cover1","maxWidth","md","sm","xs","xsHidden","smHidden","entries","CharacterInfoStats","ascRows","asc","inner","j","stat","rowName","align","Column","Table","HeaderCell","Cell","CharacterInfoTalent","talentData","image","tableData","labels","rgx","match","param","attrData","Format","param2","cols","dataKey","Markdown","info","autoHeight","wordWrap","minWidth","fixed","flexGrow","CharacterInfoPassive","passiveData","CharacterInfoConstellations","constellationData","con","consData","ItemIcon","itemData","maxHeight","CharacterInfoAscCost","console","log","ascI","sort","item","genshindb","mType","materialtype","trim","render","entry","boxes","k","justify","CharacterInfoTalentCost","CharacterInfo","passives","combat2","combat3","allCharas","imageCount","card","cover2","portrait","iKey","Characters","params","characterID","Content","Updates","show","onHide","changeLog","Modal","Title","About","memo","onShowUpdate","hash","slice","path","exec","newPath","replaceState","App","showUpdates","onHideUpdate","ForceSave","lastVisitVersion","outDated","isReady","basename","process","Container","routeProps","spin","ready","needsSave","makeAutoObservable","autoBind","Load","setInterval","Save","Update","innerWidth","localStorage","setItem","toOBJ","storedLocal","getItem","FromOBJ","currentVersion","changes","Defaults","ReactDOM","Store","document","getElementById"],"mappings":"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","file":"static/js/main.e810bb43.chunk.js","sourcesContent":["const fuzzysort = require('fuzzysort');\r\n\r\nconst LanguagesEnum = {\r\n\t'ChineseSimplified'  : 'ChineseSimplified',\r\n\t'ChineseTraditional' : 'ChineseTraditional',\r\n\t'English'            : 'English',\r\n\t'French'             : 'French',\r\n\t'German'             : 'German',\r\n\t'Indonesian'         : 'Indonesian',\r\n\t'Japanese'           : 'Japanese',\r\n\t'Korean'             : 'Korean',\r\n\t'Portuguese'         : 'Portuguese',\r\n\t'Russian'            : 'Russian',\r\n\t'Spanish'            : 'Spanish',\r\n\t'Thai'               : 'Thai',\r\n\t'Vietnamese'         : 'Vietnamese'\r\n};\r\n\r\n// converts Genshin's language codes into expanded strings\r\nconst languageMap = {\r\n\t'CHS': 'ChineseSimplified',\r\n\t'CHT': 'ChineseTraditional',\r\n\t'DE':  'German',\r\n\t'EN':  'English',\r\n\t'ES':  'Spanish',\r\n\t'FR':  'French',\r\n\t'ID':  'Indonesian',\r\n\t'JP':  'Japanese',\r\n\t'KR':  'Korean',\r\n\t'PT':  'Portuguese',\r\n\t'RU':  'Russian',\r\n\t'TH':  'Thai',\r\n\t'VI':  'Vietnamese'\r\n};\r\n// array of language strings\r\nconst languages = Object.values(languageMap);\r\n// array of language codes\r\nconst languageCodes = Object.keys(languageMap);\r\n\r\n// // converts expanded strings into javascript locale codes\r\nconst localeMap = {\r\n\t'ChineseSimplified':  'zh-cn',\r\n\t'ChineseTraditional': 'zh-tw',\r\n\t'German':             'de',\r\n\t'English':            'en',\r\n\t'Spanish':            'es',\r\n\t'French':             'fr',\r\n\t'Indonesian':         'id',\r\n\t'Japanese':           'ja',\r\n\t'Korean':             'ko',\r\n\t'Portuguese':         'pt',\r\n\t'Russian':            'ru',\r\n\t'Thai':               'th',\r\n\t'Vietnamese':         'vi'\r\n};\r\n\r\nconst languageDict = Object.keys(languageMap).concat(Object.values(languageMap));\r\n\r\nfunction autocompleteLanguage(input, dict) {\r\n    let result = fuzzysort.go(input, dict, { limit: 1 })[0];\r\n    if(result !== undefined)\r\n    \tresult = result.target.length < 4 ? languageMap[result.target] : result.target;\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param langs - a string or array of strings\r\n * @returns - autocompleted full name of the language. see languageMap.\r\n *            undefined if none of the strings are valid languages.\r\n */\r\nfunction format(langs) {\r\n    if(typeof langs === 'string') {\r\n        return autocompleteLanguage(langs, languageDict);\r\n    } else if(Array.isArray(langs)) {\r\n        let tmp = [];\r\n        for(let l of langs) {\r\n            l = format(l);\r\n            if(l && !tmp.includes(l)) tmp.push(l);\r\n        }\r\n        if(tmp.length) return tmp;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nmodule.exports = {\r\n\tLanguagesEnum: LanguagesEnum,\r\n\tlanguages: languages,\r\n\tlanguageCodes: languageCodes,\r\n\tlanguageMap: languageMap,\r\n\tlocaleMap: localeMap,\r\n\tformat: format\r\n};","// enum for folders. // make sure update index.d.ts too\r\n// not really used internally. mainly for altnames api\r\nmodule.exports = {\r\n\tcharacters     : 'characters',\r\n\ttalents        : 'talents',\r\n\tconstellations : 'constellations',\r\n\t\r\n\tweapons        : 'weapons',\r\n\r\n\tfoods          : 'foods',\r\n\tmaterials      : 'materials',\r\n\tweaponmaterialtypes: 'weaponmaterialtypes',\r\n\ttalentmaterialtypes: 'talentmaterialtypes',\r\n\r\n\tartifacts      : 'artifacts',\r\n\tdomains        : 'domains',\r\n\tenemies        : 'enemies',\r\n\r\n\trarity         : 'rarity',\r\n\telements       : 'elements'\r\n};","const alldata  = require('./min/data.min.json');\r\nconst allindex = require('./min/index.min.json');\r\nconst allimage = require('./min/image.min.json');\r\nconst allurl   = require('./min/url.min.json');\r\nconst allstats = require('./min/stats.min.json');\r\nconst allcurve = require('./min/curve.min.json');\r\n\r\nconst availableimage = ['characters', 'artifacts', 'weapons', 'constellations', 'talents', 'materials', 'foods', 'elements', 'domains', 'enemies'];\r\nconst availableurl   = ['characters', 'artifacts', 'weapons', 'foods', 'materials'];\r\nconst availablestats = ['characters', 'weapons'];\r\nconst availablecurve = ['characters', 'weapons'];\r\n\r\nconst calcStatsMap = {\r\n    'characters': calcStatsCharacter,\r\n    'weapons': calcStatsWeapon\r\n};\r\n\r\nfunction getData(lang, folder, filename) {\r\n    try {\r\n        let tmp = alldata[lang][folder][filename];\r\n        if(tmp.images === undefined && availableimage.includes(folder)) {\r\n            tmp.images = getImage(folder, filename);\r\n        }\r\n        if(tmp.url === undefined && availableurl.includes(folder)) {\r\n            tmp.url = getURL(folder, filename);\r\n        }\r\n        if(tmp.stats === undefined && availablestats.includes(folder) && calcStatsMap[folder]) {\r\n            tmp.stats = calcStatsMap[folder](filename);\r\n        }\r\n        if(folder === 'talents' && tmp.combat1.parameters === undefined) {\r\n            setAttributesTalent(tmp, filename);\r\n        }\r\n        return tmp;\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getIndex(lang, folder) {\r\n    try {\r\n        return allindex[lang][folder];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getImage(folder, filename) {\r\n    try {\r\n        return allimage[folder][filename];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getURL(folder, filename) {\r\n    try {\r\n        return allurl[folder][filename];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getStats(folder, filename) {\r\n    try {\r\n        return allstats[folder][filename];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getCurve(folder) {\r\n    try {\r\n        return allcurve[folder];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction calcStatsCharacter(filename) {\r\n    const mystats = getStats('characters', filename);\r\n    const mycurve = getCurve('characters');\r\n    if(mystats === undefined || mycurve === undefined) return undefined;\r\n    /** \r\n     * Calculates the stats of a character at a specific level and ascension phase.\r\n     * @param level: number - level. number between 1-90. returns undefined if not within range.\r\n     * @param ascension: undefined | number | string - the ascension number, or '-'/'+'. defaults to '-'.\r\n     *                   only decides which stats to return at level boundaries (20, 40, 50, 60, 70, 80).\r\n     */\r\n    return function(level, ascension) {\r\n        level = parseInt(level, 10);\r\n        if(isNaN(level)) return undefined;\r\n        if(level > 90 || level < 1) return undefined;\r\n\r\n        const [phase, promotion] = getPromotionBonus(mystats.promotion, level, ascension);\r\n        let output = {\r\n            level: level,\r\n            ascension: phase,\r\n            hp: mystats.base.hp * mycurve[level][mystats.curve.hp] + promotion.hp,\r\n            attack: mystats.base.attack * mycurve[level][mystats.curve.attack] + promotion.attack,\r\n            defense: mystats.base.defense * mycurve[level][mystats.curve.defense] + promotion.defense,\r\n            specialized: promotion.specialized\r\n        };\r\n        if(mystats.specialized === 'FIGHT_PROP_CRITICAL')\r\n            output.specialized += mystats.base.critrate;\r\n        else if(mystats.specialized === 'FIGHT_PROP_CRITICAL_HURT')\r\n            output.specialized += mystats.base.critdmg;\r\n\r\n        return output;\r\n    }\r\n}\r\n\r\nfunction calcStatsWeapon(filename) {\r\n    const mystats = getStats('weapons', filename);\r\n    const mycurve = getCurve('weapons');\r\n    if(mystats === undefined || mycurve === undefined) return undefined;\r\n    const maxlevel = mystats.promotion[mystats.promotion.length-1].maxlevel;\r\n    /**\r\n     * Calculates the stats of a weapon at a specific level and ascension phase.\r\n     */\r\n    return function(level, ascension) {\r\n        level = parseInt(level, 10);\r\n        if(isNaN(level)) return undefined;\r\n        if(level > maxlevel || level < 1) return undefined;\r\n\r\n       const [phase, promotion] = getPromotionBonus(mystats.promotion, level, ascension);\r\n        let output = {\r\n            level: level,\r\n            ascension: phase,\r\n            attack: mystats.base.attack * mycurve[level][mystats.curve.attack] + promotion.attack,\r\n            specialized: mystats.base.specialized * mycurve[level][mystats.curve.specialized]\r\n        };\r\n\r\n        return output; \r\n    }\r\n}\r\n\r\n/**\r\n * @param level: integer\r\n * @param ascension: undefined | number | string - the ascension number, or '-'/'+'. defaults to '-'.\r\n *                   only decides which stats to return at level boundaries.\r\n */\r\nfunction getPromotionBonus(promotions, level, ascension) {\r\n    for(let index = promotions.length - 2; index >= 0; index--) {\r\n        if(level > promotions[index].maxlevel) {\r\n            return [index+1, promotions[index+1]];\r\n        } else if(level === promotions[index].maxlevel) {\r\n            if(Number.isFinite(ascension) && ascension > index || ascension === '+')\r\n                return [index+1, promotions[index+1]];\r\n            else\r\n                return [index, promotions[index]];\r\n        }\r\n    }\r\n    return [0, promotions[0]];\r\n}\r\n\r\nfunction setAttributesTalent(data, filename) {\r\n    const myparams = getStats('talents', filename);\r\n    for(const prop of ['combat1', 'combat2', 'combatsp', 'combat3']) {\r\n        if(myparams[prop] === undefined) continue;\r\n        data[prop].attributes.parameters = myparams[prop];\r\n    }\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    getData: getData,\r\n    getIndex: getIndex,\r\n    getImage: getImage,\r\n    getStats: getStats\r\n}","const fuzzysort = require('fuzzysort');\r\n//const design = require('./design.json');\r\nconst language = require('./language.js');\r\nconst Folder = require('./folder.js');\r\nconst altnames = require('./altnames.js');\r\nconst { getData, getIndex } = require('./getdata.js');\r\n\r\n// object that will be exported\r\nconst genshin = {};\r\n\r\n// Options that we'll start off with.\r\nlet baseoptions = {\r\n    matchAltNames: true, // Allows the matching of alternate or custom names.\r\n    matchAliases: false, // Allows the matching of aliases. These are searchable fields that returns the data object the query matched in.\r\n    matchCategories: false, // Allows the matching of categories. If true, then returns an array if it matches.\r\n    verboseCategories: false, // Used if a category is matched. If true, then replaces each string name in the array with the data object instead.\r\n    queryLanguages: [\"English\"], // Array of languages that your query will be searched in.\r\n    resultLanguage: \"English\" // Output language that you want your results to be in.\r\n}\r\n\r\ngenshin.setOptions = function(options) {\r\n    Object.assign(baseoptions, sanitizeOptions(options));\r\n}\r\n\r\ngenshin.getOptions = function() {\r\n    return JSON.parse(JSON.stringify(baseoptions));\r\n}\r\n\r\n/**\r\n * get rid of unnecessary properties\r\n */\r\nfunction sanitizeOptions(opts) {\r\n    if(typeof opts !== 'object' || opts === null) return undefined;\r\n\r\n    let sanOpts = {};\r\n    ['matchAltNames', 'matchAliases', 'matchCategories', 'verboseCategories'].forEach(prop => {\r\n        if(typeof opts[prop] === 'boolean') sanOpts[prop] = opts[prop];\r\n    });\r\n    opts.resultLanguage = language.format(opts.resultLanguage);\r\n    if(opts.resultLanguage !== undefined)\r\n        sanOpts.resultLanguage = opts.resultLanguage;\r\n    opts.queryLanguages = language.format(opts.queryLanguages);\r\n    if(opts.queryLanguages !== undefined)\r\n        sanOpts.queryLanguages = Array.isArray(opts.queryLanguages) ? opts.queryLanguages : [opts.queryLanguages];\r\n    return sanOpts;\r\n}\r\n\r\n// returns an array of strings used for autocomplete aka fuzzy searching\r\nfunction buildQueryDict(querylangs, folder, opts) {\r\n    let dict = opts.matchCategories ? ['names'] : [];\r\n    for(const lang of querylangs) {\r\n        const index = getIndex(lang, folder);\r\n        if(index === undefined) continue;\r\n        if(index.names)\r\n            dict = dict.concat(Object.keys(index.names));\r\n        if(opts.matchAltNames)\r\n            dict = dict.concat(altnames.getAltNamesList(lang, folder));\r\n        if(opts.matchAliases && index.aliases)\r\n            dict = dict.concat(Object.keys(index.aliases));\r\n        if(opts.matchCategories && index.categories)\r\n            dict = dict.concat(Object.keys(index.categories));\r\n    }\r\n    return dict;\r\n}\r\n\r\nfunction autocomplete(input, dict) {\r\n    let result = fuzzysort.go(input, dict, { limit: 1 })[0];\r\n    return result === undefined ? undefined : result.target;\r\n}\r\n\r\n// genshin.categories = function(query, opts={}) {\r\n//     opts = Object.assign({}, baseoptions, sanitizeOptions(opts));\r\n\r\n//     const file = getCategory(opts.resultLanguage);\r\n//     return file[query] ? file[query] : [];\r\n// }\r\n\r\n// TODO: use a better name lol\r\n// TODO: if folder is undefined, search through every folder\r\nfunction searchFolder(query, folder, opts, getfilename) {\r\n    opts = Object.assign({}, baseoptions, sanitizeOptions(opts));\r\n    query = autocomplete(\"\"+query, buildQueryDict(opts.queryLanguages, folder, opts));\r\n    if(query === undefined) return undefined; // no result\r\n\r\n    for(let lang of opts.queryLanguages) {\r\n        let langindex = getIndex(lang, folder);\r\n        if(langindex === undefined) continue;\r\n\r\n        // check if query is in .names\r\n        if(langindex.names[query] !== undefined) {\r\n            const filename = langindex.names[query];\r\n            if(getfilename) return filename;\r\n            return getData(opts.resultLanguage, folder, filename);\r\n        }\r\n\r\n        // check if query is in .altnames\r\n        if(opts.matchAltNames && altnames.getFilename(lang, folder, query)) {\r\n            const filename = altnames.getFilename(lang, folder, query);\r\n            if(getfilename) return filename;\r\n            return getData(opts.resultLanguage, folder, filename);\r\n        }\r\n\r\n        // check if query is in .aliases\r\n        if(opts.matchAliases && langindex.aliases[query] !== undefined) {\r\n            const filename = langindex.aliases[query];\r\n            if(getfilename) return filename;\r\n            return getData(opts.resultLanguage, folder, filename);\r\n        }\r\n\r\n        // check if query is in .categories or is 'names'\r\n        if(opts.matchCategories && (langindex.categories[query] !== undefined || query === 'names')) {\r\n            let reslangindex = getIndex(opts.resultLanguage, folder);\r\n            if(reslangindex === undefined) return undefined;\r\n\r\n            let tmparr = (query === 'names') ? Object.values(reslangindex.names) : langindex.categories[query];\r\n            // change the array of filenames into an array of data objects or data names. ignores undefined results if any\r\n            return tmparr.reduce((accum, filename) => {\r\n                let res = opts.verboseCategories ? getData(opts.resultLanguage, folder, filename) : reslangindex.namemap[filename];\r\n                if(res !== undefined) accum.push(res);\r\n                return accum;\r\n            }, []);\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\ngenshin.characters = function(query, opts) {\r\n    return searchFolder(query, Folder.characters, opts);\r\n}\r\ngenshin.character = genshin.characters;\r\n\r\ngenshin.talents = function(query, opts) {\r\n    return searchFolder(query, Folder.talents, opts);\r\n}\r\ngenshin.talent = genshin.talents;\r\n\r\ngenshin.weapons = function(query, opts) {\r\n    return searchFolder(query, Folder.weapons, opts);\r\n}\r\ngenshin.weapon = genshin.weapons;\r\n\r\ngenshin.weaponmaterialtypes = function(query, opts) {\r\n    return searchFolder(query, Folder.weaponmaterialtypes, opts);\r\n}\r\ngenshin.weaponmaterialtype = genshin.weaponmaterialtypes;\r\n\r\ngenshin.talentmaterialtypes = function(query, opts) {\r\n    return searchFolder(query, Folder.talentmaterialtypes, opts);\r\n}\r\ngenshin.talentmaterialtype = genshin.talentmaterialtypes;\r\n\r\ngenshin.materials = function(query, opts) {\r\n    return searchFolder(query, Folder.materials, opts);\r\n}\r\ngenshin.material = genshin.materials;\r\n\r\ngenshin.elements = function(query, opts) {\r\n    return searchFolder(query, Folder.elements, opts);\r\n}\r\ngenshin.element = genshin.elements;\r\n\r\ngenshin.constellations = function(query, opts) {\r\n    return searchFolder(query, Folder.constellations, opts);\r\n}\r\ngenshin.constellation = genshin.constellations;\r\n\r\ngenshin.artifacts = function(query, opts) {\r\n    return searchFolder(query, Folder.artifacts, opts);\r\n}\r\ngenshin.artifact = genshin.artifacts;\r\n\r\ngenshin.rarity = function(query, opts) {\r\n    return searchFolder(query, Folder.rarity, opts);\r\n}\r\n\r\ngenshin.foods = function(query, opts) {\r\n    return searchFolder(query, Folder.foods, opts);\r\n}\r\ngenshin.food = genshin.foods;\r\n\r\ngenshin.domains = function(query, opts) {\r\n    return searchFolder(query, Folder.domains, opts);\r\n}\r\ngenshin.domain = genshin.domains;\r\n\r\ngenshin.enemies = function(query, opts) {\r\n    return searchFolder(query, Folder.enemies, opts);\r\n}\r\ngenshin.enemy = genshin.enemies;\r\n\r\n// genshin.reactions = function(query, opts={}) {\r\n//     opts = Object.assign({}, baseoptions, sanitizeOptions(opts));\r\n\r\n//     const data = getJSON(`./${baselang}/reactions/${query}`);\r\n\r\n//     return data;\r\n// }\r\n\r\ngenshin.helper = require('./helper.js');\r\n\r\n// export enums\r\ngenshin.Language = language.LanguagesEnum;\r\ngenshin.Languages = language.LanguagesEnum;\r\ngenshin.Folder = Folder;\r\ngenshin.Folders = Folder;\r\n\r\n// export custom alternate names api\r\ngenshin.addAltName = function(language, folder, altname, query) {\r\n    const myOptions = {\r\n        matchAltNames: false,\r\n        matchAliases: false,\r\n        matchCategories: false,\r\n        verboseCategories: false,\r\n        queryLanguages: [language],\r\n    }\r\n    const filename = searchFolder(query, folder, myOptions, true)\r\n    if(filename)\r\n        return altnames.addAltName(language, folder, altname, filename);\r\n    else\r\n        return false;\r\n}\r\ngenshin.removeAltNames = altnames.removeAltNames;\r\ngenshin.setAltNameLimits = altnames.setLimit;\r\n\r\n\r\nmodule.exports = genshin;","const Folder = require('./folder.js');\r\nconst { LanguagesEnum } = require('./language.js');\r\nconst { getIndex } = require('./getdata.js');\r\n\r\n// object to export\r\nlet altnames = {}\r\n\r\n\r\nlet altnameindex = { count: 0 };\r\n\r\n/* type checking of altnameindex\r\n{\r\n\tcount: number;\r\n\t[folder: Folder]?: {\r\n\t\t[language: LanguagesEnum]?: {\r\n\t\t\t[altname: string]: filename; // filename is a string\r\n\t\t}\r\n\t}\t\r\n}\r\n*/\r\n\r\nlet baselimits = {\r\n\tmaxLength: 100,\r\n\tmaxCount: 1000\r\n};\r\n\r\n\r\nfunction isValidFolder(folder) {\r\n\treturn typeof folder === 'string' && Folder[folder];\r\n}\r\nfunction isValidLanguage(language) {\r\n\treturn typeof language === 'string' && LanguagesEnum[language];\r\n}\r\nfunction isValidAltName(altname) {\r\n\treturn typeof altname === 'string' && altname.length > 0 && altname.length <= baselimits.maxLength;\r\n}\r\nfunction isValidFilename(filename, language, folder) {\r\n\tif(typeof filename !== 'string') return false;\r\n\tconst index = getIndex(language, folder);\r\n\treturn index !== undefined && index.namemap[filename] !== undefined;\r\n}\r\n\r\nfunction isEmpty(obj) {\r\n\tfor(let x in obj) { if(obj.hasOwnProperty(x)) return false; }\r\n\treturn true;\r\n}\r\n\r\naltnames.setLimit = function(limits) {\r\n\tif(typeof limits.maxLength  === 'number')\r\n\t\tbaselimits.maxLength = limits.maxLength;\r\n\tif(typeof limits.maxCount === 'number')\r\n\t\tbaselimits.maxCount = limits.maxCount;\r\n}\r\n\r\n// see examples at the bottom of this script\r\naltnames.addAltName = function(language, folder, altname, filename) {\r\n\tif(!isValidLanguage(language) || !isValidFolder(folder)) return false;\r\n\tif(!isValidAltName(altname) || !isValidFilename(filename, language, folder)) return false;\r\n\tif(altnameindex.count >= baselimits.maxCount) return false;\r\n\r\n\tif(!altnameindex[language])\r\n\t\taltnameindex[language] = {};\r\n\tif(!altnameindex[language][folder])\r\n\t\taltnameindex[language][folder] = {};\r\n\taltnameindex[language][folder][altname]\t= filename;\r\n\taltnameindex.count++;\r\n\treturn true;\r\n}\r\n\r\naltnames.removeAltNames = function(language, folder, altname) {\r\n\tif(!isValidLanguage(language) || !isValidFolder(folder)) return false;\r\n\tif(typeof altname !== 'undefined' && typeof altname !== 'string') return false;\r\n\r\n\ttry {\r\n\t\tif(altname !== undefined) {\r\n\t\t\taltnameindex.count--;\r\n\t\t\tdelete altnameindex[language][folder][altname];\r\n\t\t} else {\r\n\t\t\taltnameindex.count -= Object.keys(altnameindex[language][folder]).length;\r\n\t\t\tdelete altnameindex[language][folder];\r\n\t\t}\r\n\r\n\t\tif(isEmpty(altnameindex[language][folder])) delete altnameindex[language][folder];\r\n\t\tif(isEmpty(altnameindex[language])) delete altnameindex[language];\r\n\t} catch(e) {}\r\n\treturn true;\r\n}\r\n\r\n// get string[] of all altnames for a language/folder. empty array if doesn't exist.\r\naltnames.getAltNamesList = function(language, folder) {\r\n\tif(altnameindex[language] && altnameindex[language][folder])\r\n\t\treturn Object.keys(altnameindex[language][folder]);\r\n\telse\r\n\t\treturn [];\r\n}\r\n\r\naltnames.getFilename = function(language, folder, altname) {\r\n\tif(altnameindex[language] && altnameindex[language][folder] && altnameindex[language][folder][altname])\r\n\t\treturn altnameindex[language][folder][altname];\r\n\telse\r\n\t\treturn undefined;\r\n}\r\n\r\n// add default altnames\r\naltnames.addAltName('English', 'characters', 'Childe', 'tartaglia');\r\naltnames.addAltName('English', 'talents', 'Childe', 'tartaglia');\r\naltnames.addAltName('English', 'constellations', 'Childe', 'tartaglia');\r\n\r\naltnames.addAltName('English', 'characters', 'Baal', 'raidenshogun');\r\naltnames.addAltName('English', 'talents', 'Baal', 'raidenshogun');\r\naltnames.addAltName('English', 'constellations', 'Baal', 'raidenshogun');\r\n\r\naltnames.addAltName('English', 'talents', 'Anemo Traveler', 'traveleranemo');\r\naltnames.addAltName('English', 'talents', 'Electro Traveler', 'travelerelectro');\r\naltnames.addAltName('English', 'talents', 'Geo Traveler', 'travelergeo');\r\naltnames.addAltName('English', 'constellations', 'Anemo Traveler', 'traveleranemo');\r\naltnames.addAltName('English', 'constellations', 'Electro Traveler', 'travelerelectro');\r\naltnames.addAltName('English', 'constellations', 'Geo Traveler', 'travelergeo');\r\n\r\nmodule.exports = altnames;","const helper = {};\r\n\r\n\r\nhelper.makeFilename = function(str) {\r\n\tstr = str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n\treturn str.toLowerCase().replace(/[^a-z]/g,'');\r\n}\r\n\r\n\r\n/**\r\n * english only :(\r\n */\r\nhelper.substat = function(substat, subvalue) {\r\n\tif(subvalue === undefined) return;\r\n\treturn substat.replace(/([^%]*)(%?)/, `$1 ${subvalue}$2`)\r\n}\r\n\r\n/**\r\n * If you're too lazy to make your own String.format function, then use this one.\r\n * replaces {0} etc with values. can separate with slashes\r\n */\r\nhelper.effect = function(effect, ...numbers) {\r\n\tif(effect === undefined || numbers.length === 0) return;\r\n\r\n\tfor(let i = 0; i < numbers[0].length; i++) {\r\n\t\tlet values = numbers.reduce((acc, curr) => {\r\n\t\t\tif(acc !== \"\") acc += '/';\r\n\t\t\treturn acc + curr[i];\r\n\t\t}, \"\");\r\n\t\teffect = effect.replace(new RegExp(`\\\\{${i}\\\\}`, 'g'), values);\r\n\t}\r\n\treturn effect;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = helper;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Content, FlexboxGrid } from 'rsuite';\r\n\r\nimport CharactersList from './CharactersList';\r\nimport CharacterInfo from './CharacterInfo';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nlet charactersDB = {};\r\nconst allCharas = genshindb.talents('names', { matchCategories: true });\r\nfor (let i = 0; i < allCharas.length; i++) {\r\n  const name = allCharas[i];\r\n  const key = name.replace(/[\\s]+/g, \"_\").replace(/[\\(\\)]+/g, \"\");\r\n  if (name.includes(\"Traveler\")) {\r\n    charactersDB[key] = {\r\n      ...genshindb.characters(\"Aether\"),\r\n      element: name.match(/\\((.*)\\)/)[1]\r\n    };\r\n  } else {\r\n    charactersDB[key] = { ...genshindb.characters(name) };\r\n  }\r\n  charactersDB[key].talentName = name;\r\n}\r\n\r\nlet imageCount = {\r\n  card: [],\r\n  cover1: [],\r\n  cover2: [],\r\n  \"hoyolab-avatar\": [],\r\n  image: [],\r\n  portrait: []\r\n};\r\nfor (const key in charactersDB) {\r\n  const element = charactersDB[key];\r\n  for (const iKey in imageCount) {\r\n    if (!element.images.hasOwnProperty(iKey)) {\r\n      imageCount[iKey].push(key);\r\n    }\r\n  }\r\n}\r\n\r\nconst Characters = observer(class extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      match, history\r\n    } = this.props;\r\n    const data = charactersDB[match.params.characterID];\r\n    return <Content className=\"content\">\r\n      <FlexboxGrid justify=\"center\">\r\n        {\r\n          data ? <CharacterInfo data={data} />\r\n            : <CharactersList charactersDB={charactersDB} history={history} />\r\n        }\r\n\r\n      </FlexboxGrid>\r\n    </Content>\r\n\r\n  }\r\n})\r\n\r\nexport default Characters;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Navbar, Nav, Button, Icon } from 'rsuite';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst barHeight = 56;\r\n\r\nconst NavLinks = ({ onClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Nav.Item eventKey=\"/characters\" componentClass={Link} to=\"/characters\" onClick={onClick}>\r\n        Characters\r\n      </Nav.Item>\r\n      <Nav.Item eventKey=\"/weapons\" componentClass={Link} to=\"/weapons\" onClick={onClick}>\r\n        Weapons\r\n      </Nav.Item>\r\n      <Nav.Item eventKey=\"/useful-info\" componentClass={Link} to=\"/useful-info\" onClick={onClick}>\r\n        Useful Info\r\n      </Nav.Item>\r\n      <Nav.Item eventKey=\"/about\" componentClass={Link} to=\"/about\" onClick={onClick}>\r\n        About\r\n      </Nav.Item>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst NavBar = observer(class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n      top: 0\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.onWindowScroll);\r\n    this.prevScroll = window.pageYOffset;\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.onWindowScroll);\r\n  }\r\n  toggleMenu = () => {\r\n    this.setState({ showMenu: !this.state.showMenu });\r\n  }\r\n  onWindowScroll = () => {\r\n    const currentScroll = window.pageYOffset;\r\n    const delta = currentScroll - this.prevScroll;\r\n    if (Math.abs(delta) < 5) return;\r\n    const hide = delta < 0;\r\n    this.setState({ top: hide ? 0 : -barHeight });\r\n    this.prevScroll = currentScroll;\r\n  }\r\n  render() {\r\n    const {\r\n      showMenu, top\r\n    } = this.state;\r\n    const {\r\n      isXS, windowWidth\r\n    } = this.props.store;\r\n    const activeKey = this.props.location.pathname;\r\n    const barStyle = {\r\n      height: barHeight,\r\n      top\r\n    }\r\n    const linksStyle = {\r\n      top: barHeight + top\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          isXS &&\r\n          <Nav className={\"navToggle \" + (showMenu ? \"visible\" : \"\")} style={linksStyle} vertical>\r\n            <NavLinks onClick={this.toggleMenu} {...{ activeKey }} />\r\n          </Nav>\r\n        }\r\n        <Navbar className=\"navbar\" style={barStyle}>\r\n          <Navbar.Body>\r\n            {\r\n              !isXS ?\r\n                <Nav >\r\n                  <NavLinks {...{ activeKey }} />\r\n                </Nav> :\r\n                <Navbar.Header style={{ padding: \"8px 10px\" }}>\r\n                  <Button appearance=\"subtle\" onClick={this.toggleMenu}>\r\n                    <Icon icon=\"bars\" size=\"2x\" />\r\n                  </Button>\r\n                </Navbar.Header>\r\n            }\r\n          </Navbar.Body>\r\n        </Navbar>\r\n        <div style={{ height: barHeight }} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n});\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Nav } from 'rsuite';\r\n\r\n\r\nconst Tags = ({ list, selected, onSelect }) => {\r\n  let blocks = [];\r\n  for (const key in list) {\r\n    let isActive = true;\r\n    if (Array.isArray(selected)) {\r\n      isActive = selected.length === 0 || selected.indexOf(key) >= 0;\r\n    } else {\r\n      isActive = key === selected;\r\n    }\r\n    blocks.push(\r\n      <Nav.Item eventKey={key} key={\"TAGS.\" + key} className=\"tags\" active={isActive}>\r\n        {list[key] instanceof Function ? list[key](isActive) : list[key]}\r\n      </Nav.Item>\r\n    )\r\n  }\r\n\r\n  return <Nav className=\"tags\" appearance=\"subtle\" onSelect={onSelect}>\r\n    {blocks}\r\n  </Nav>\r\n}\r\n\r\nexport default Tags;","import React from 'react';\r\n\r\nimport '../css/icons.css';\r\n\r\nconst ImgIcon = ({ src, size, height, className, onClick, img, alt }) => {\r\n  size = Number(size) || 24;\r\n  let style = {\r\n    width: size + \"px\",\r\n    height: size + \"px\"\r\n  }\r\n  // if (img) {\r\n  //   style.backgroundImage = \"url(\" + src + \")\";\r\n  // }\r\n  className = (className || \"\") + \" icon \";\r\n  if (onClick) className += \" button\";\r\n  if (img) {\r\n    style.height = height || \"auto\";\r\n    return <img\r\n      src={src}\r\n      className={className}\r\n      style={style}\r\n      title={alt}\r\n      alt={alt}\r\n      onClick={onClick}\r\n    />\r\n  }\r\n  return <i\r\n    className={className + src}\r\n    style={style}\r\n    title={alt}\r\n    onClick={onClick}\r\n  />\r\n}\r\n\r\nexport default ImgIcon;","import ReactMarkdown from 'react-markdown'\r\n\r\nclass Utils {\r\n  FormatNumber(val) {\r\n    return Math.round(val);\r\n  }\r\n\r\n  FormatPercent(val) {\r\n    return this.FormatNumber(val * 100);\r\n  }\r\n\r\n  Format(val, type) {\r\n    if (type.includes(\"P\")) val *= 100;\r\n    if (type.includes(\"F1\")) {\r\n      val *= 10;\r\n      val = Math.round(val) / 10;\r\n    } else {\r\n      val = Math.round(val);\r\n    }\r\n    if (type.includes(\"P\")) val += \"%\";\r\n    return val;\r\n  }\r\n\r\n  Markdown(string) {\r\n    return <ReactMarkdown>\r\n      {string.replaceAll(\"\\n\", \"  \\n\")}\r\n    </ReactMarkdown>\r\n  }\r\n\r\n  Redirect(history, loc, toTop) {\r\n    const location = {\r\n      pathname: loc,\r\n      state: { fromDashboard: true }\r\n    }\r\n    history.push(location);\r\n    if (toTop) window.scrollTo(0, 0);\r\n  }\r\n\r\n  isPlainObject(obj) {\r\n\r\n    // Basic check for Type object that's not null\r\n    if (typeof obj == 'object' && obj !== null) {\r\n\r\n      // If Object.getPrototypeOf supported, use it\r\n      if (typeof Object.getPrototypeOf == 'function') {\r\n        var proto = Object.getPrototypeOf(obj);\r\n        return proto === Object.prototype || proto === null;\r\n      }\r\n\r\n      // Otherwise, use internal class\r\n      // This should be reliable as if getPrototypeOf not supported, is pre-ES5\r\n      return Object.prototype.toString.call(obj) == '[object Object]';\r\n    }\r\n\r\n    // Not an object\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport default new Utils();","import React from 'react';\r\nimport { InputGroup, Input, Icon, FlexboxGrid } from 'rsuite';\r\n\r\nimport Tags from '../Tags';\r\nimport ImgIcon from '../Icon';\r\nimport Utils from '../../Utils';\r\n\r\n\r\nconst visionList = {\r\n  \"Anemo\": (active) => <ImgIcon src=\"element anemo\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Cryo\": (active) => <ImgIcon src=\"element cryo\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  // \"dendro\": <ImgIcon src=\"element dendro\" size=\"48\" />,\r\n  \"Electro\": (active) => <ImgIcon src=\"element electro\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Geo\": (active) => <ImgIcon src=\"element geo\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Hydro\": (active) => <ImgIcon src=\"element hydro\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Pyro\": (active) => <ImgIcon src=\"element pyro\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />\r\n}\r\n\r\nconst weaponList = {\r\n  \"Sword\": (active) => <ImgIcon src=\"wtype sword\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Claymore\": (active) => <ImgIcon src=\"wtype claymore\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Polearm\": (active) => <ImgIcon src=\"wtype polearm\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Bow\": (active) => <ImgIcon src=\"wtype bow\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Catalyst\": (active) => <ImgIcon src=\"wtype catalyst\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n}\r\n\r\nconst rarityList = {\r\n  \"4\": \"4-Star\",\r\n  \"5\": \"5-Star\"\r\n}\r\n\r\n\r\nclass CharactersList extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visions: [\"Anemo\", \"Cryo\", \"Electro\", \"Geo\", \"Hydro\", \"Pyro\"],\r\n      weapons: [\"Sword\", \"Claymore\", \"Polearm\", \"Bow\", \"Catalyst\"],\r\n      rarity: [\"4\", \"5\"],\r\n      search: \"\"\r\n    }\r\n\r\n  }\r\n  onSearch = (search) => {\r\n    this.setState({ search });\r\n  }\r\n  setTags = (prop, newValue) => {\r\n    let tags = [...this.state[prop]];\r\n    let tagIndex = tags.indexOf(newValue);\r\n    if (tagIndex >= 0 && tags.length === 1) {\r\n      tags.splice(tagIndex, 1);\r\n    } else if (tagIndex >= 0) {\r\n      tags = [newValue];\r\n    } else {\r\n      tags.push(newValue);\r\n    }\r\n    this.setState({ [prop]: tags });\r\n  }\r\n  setVisions = (vision) => {\r\n    this.setTags(\"visions\", vision);\r\n  }\r\n  setWeapons = (weapon) => {\r\n    this.setTags(\"weapons\", weapon);\r\n  }\r\n  setRarity = (rarity) => {\r\n    this.setTags(\"rarity\", rarity);\r\n  }\r\n  charaRender = (key, data) => {\r\n    const { onClick, history } = this.props;\r\n    const clicked = () => {\r\n      if (typeof onClick === 'function') {\r\n        onClick(data.name);\r\n      }\r\n      this.setState({ showList: false });\r\n      Utils.Redirect(history, '/characters/' + key, true);\r\n    }\r\n    const { rarity, weapontype, element, talentName, costs } = data;\r\n    // TODO: show mats?\r\n    // const allCosts = {\r\n    //   ...costs,\r\n    //   ...GenshinDB.talents(talentName).costs\r\n    // };\r\n    // let lvlMats = {};\r\n    // for (const cKey in allCosts) {\r\n    //   for (let i = 0; i < allCosts[cKey].length; i++) {\r\n    //     const item = GenshinDB.materials(allCosts[cKey][i].name);\r\n    //     let mType = item.materialtype.replace(/\\(.*\\)\\s*/, \"\").trim();\r\n    //     if ([\"Character Level-Up Material\", \"Talent Level-Up Material\"].includes(mType)) {\r\n    //       lvlMats[item.name] = item;\r\n    //     }\r\n    //   }\r\n    // }\r\n\r\n    const className = \"itemWrapper character rarity\" + rarity;\r\n    let stars = [];\r\n    for (let i = 0; i < rarity; i++) {\r\n      stars.push(<Icon key={\"star\" + i} icon=\"star\" />)\r\n    }\r\n    return <FlexboxGrid.Item key={\"character_\" + key} className={className} onClick={clicked}>\r\n      <div className=\"item\">\r\n        <div className=\"header\">\r\n          {data.talentName}\r\n        </div>\r\n        <div className=\"header rarity\">\r\n          {stars}\r\n        </div>\r\n        <ImgIcon src={data.images.icon} img size=\"124\" height=\"124px\" />\r\n        <FlexboxGrid className=\"header\">\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <ImgIcon src={\"element \" + element.toLowerCase()} size=\"32\" />\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <ImgIcon src={\"wtype \" + weapontype.toLowerCase()} size=\"32\" />\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </div>\r\n    </FlexboxGrid.Item>\r\n  }\r\n  render() {\r\n    const { charactersDB } = this.props;\r\n    const { visions, weapons, rarity, search } = this.state;\r\n    let blocks = [];\r\n    let rendered = [];\r\n    for (const charaName in charactersDB) {\r\n      const data = charactersDB[charaName];\r\n      if (!data.talentName.toLowerCase().includes(search.toLowerCase())) continue;\r\n      if (rarity.length > 0 && !rarity.includes(data.rarity)) continue;\r\n      if (visions.length > 0 && !visions.includes(data.element)) continue;\r\n      if (weapons.length > 0 && !weapons.includes(data.weapontype)) continue;\r\n      blocks.push(this.charaRender(charaName, data));\r\n      rendered.push(charaName);\r\n    }\r\n    return <React.Fragment>\r\n      <Tags\r\n        list={visionList}\r\n        selected={visions}\r\n        onSelect={this.setVisions}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} />\r\n      <Tags\r\n        list={weaponList}\r\n        selected={weapons}\r\n        onSelect={this.setWeapons}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} />\r\n      <Tags\r\n        list={rarityList}\r\n        selected={rarity}\r\n        onSelect={this.setRarity}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} >\r\n        <InputGroup className=\"search\">\r\n          <Input value={search} onChange={this.onSearch} />\r\n          <InputGroup.Addon>\r\n            <Icon icon=\"search\" />\r\n          </InputGroup.Addon>\r\n        </InputGroup>\r\n      </FlexboxGrid.Item>\r\n      {blocks}\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nexport default CharactersList;","import { FlexboxGrid, Col } from 'rsuite';\r\nimport Utils from '../../Utils';\r\n\r\nconst CharacterInfoHeader = ({ data }) => {\r\n  const displayData = {\r\n    \"Rarity\": data.rarity,\r\n    \"Element\": data.element,\r\n    \"Weapon Type\": data.weapontype,\r\n    \"Gender\": data.gender,\r\n    \"Body Type\": data.body,\r\n    \"Birthday\": data.birthday,\r\n    \"Region\": data.region,\r\n    \"Affiliation\": data.affiliation,\r\n    \"Constellation\": data.constellation,\r\n    \"CV\": data.cv,\r\n    \"Fandom\": data.url.fandom ? [<a key=\"url\" href={data.url.fandom} >{data.url.fandom}</a>] : \"\"\r\n  };\r\n  let rows = [];\r\n  let i = 0;\r\n  for (const key in displayData) {\r\n    let value = displayData[key];\r\n    const isOdd = i % 2 === 1;\r\n    if (Utils.isPlainObject(value)) {\r\n      let tempValue = [];\r\n      for (const key2 in value) {\r\n        if (Object.hasOwnProperty.call(value, key2)) {\r\n          tempValue.push(<p key={key + \":\" + key2}>\r\n            <b>{key2}</b>: {value[key2]}\r\n          </p>)\r\n        }\r\n      }\r\n      value = tempValue;\r\n    }\r\n    rows.push(\r\n      <FlexboxGrid className={\"tableRows \" + (isOdd ? \"odd\" : \"even\")} key={\"dataDisplay-\" + key}>\r\n        <FlexboxGrid.Item colspan={10}>{key}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={14}>{value}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n    i++;\r\n  }\r\n\r\n  return <FlexboxGrid className=\"infoHeader\">\r\n    <FlexboxGrid.Item componentClass={Col} colspan={24} mdHidden lgHidden>\r\n      <img\r\n        src={data.images.cover1}\r\n        alt={data.talentName}\r\n        className=\"characterCover\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"100%\"\r\n        }}\r\n      />\r\n    </FlexboxGrid.Item>\r\n\r\n    <FlexboxGrid.Item componentClass={Col} colspan={10} md={10} sm={24} xs={24}>\r\n      {rows}\r\n    </FlexboxGrid.Item>\r\n\r\n    <FlexboxGrid.Item componentClass={Col} colspan={14} md={14} xsHidden smHidden>\r\n      <img\r\n        src={data.images.cover1}\r\n        alt={data.talentName}\r\n        className=\"characterCover\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"100%\"\r\n        }}\r\n      />\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoHeader;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport Utils from '../../Utils';\r\n\r\nconst entries = [\r\n  [1, null],\r\n  [20, null], [20, \"+\"],\r\n  [40, null], [40, \"+\"],\r\n  [50, null], [50, \"+\"],\r\n  [60, null], [60, \"+\"],\r\n  [70, null], [70, \"+\"],\r\n  [80, null], [80, \"+\"],\r\n  [90, null]\r\n]\r\n\r\nconst CharacterInfoStats = ({ data }) => {\r\n  let rows = [];\r\n  let ascRows = {};\r\n  for (let i = 0; i < entries.length; i++) {\r\n    const element = entries[i];\r\n    const stats = data.stats(element[0], element[1]);\r\n    ascRows[stats.ascension] = ascRows[stats.ascension] || [];\r\n    ascRows[stats.ascension].push(stats)\r\n  }\r\n  let asc = 0;\r\n  for (const key in ascRows) {\r\n    const stats = ascRows[key];\r\n    let inner = [];\r\n    for (let j = 0; j < stats.length; j++) {\r\n      const stat = stats[j];\r\n      inner.push(<FlexboxGrid className=\"row\" key={\"ascstats\" + j}>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.level)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.hp)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.attack)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.defense)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.specialized)} %</FlexboxGrid.Item>\r\n      </FlexboxGrid>)\r\n    }\r\n    const isOdd = ++asc % 2 === 1;\r\n    const rowName = \"tableRows \" + (isOdd ? \"odd\" : \"even\");\r\n    rows.push(<FlexboxGrid className={rowName} align=\"middle\" key={\"ascRow\" + asc}>\r\n      <FlexboxGrid.Item colspan={4}>{asc}</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={20}>\r\n        {inner}\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>)\r\n  }\r\n\r\n  return <div className=\"stats\">\r\n    <h2>Base Stats</h2>\r\n    <FlexboxGrid align=\"middle\" className=\"tableRows header\">\r\n      <FlexboxGrid.Item colspan={4}>Ascension</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Level</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Base HP</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Base Attack</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Base Defense</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>{data.substat} %</FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n    {rows}\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfoStats;","import { FlexboxGrid, Table } from 'rsuite';\r\n\r\nimport ImgIcon from '../Icon';\r\nimport Utils from '../../Utils';\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst CharacterInfoTalent = ({ talentData, image }) => {\r\n  let tableData = [];\r\n  for (let i = 0; i < talentData.attributes.labels.length; i++) {\r\n    const label = talentData.attributes.labels[i];\r\n    // const rgx = label.match(/([^\\|]+)\\|{(param[0-9]+)\\:([^\\}]+)}([^\\{]*)(?:{(param[0-9]+)\\:([^\\}]+)})?/i);\r\n    const rgx = label.match(/([^\\|]+)\\|{(param[0-9]+):([^\\}]+)}([^\\{]*)(?:{(param[0-9]+):([^\\}]+)})?/i);\r\n    const param = talentData.attributes.parameters[rgx[2]];\r\n    let attrData = {\r\n      name: rgx[1]\r\n    };\r\n    for (let j = 0; j < param.length; j++) {\r\n      attrData[\"lvl\" + (j + 1)] = Utils.Format(param[j], rgx[3]) + rgx[4];\r\n    }\r\n    if (rgx[5]) {\r\n      const param2 = talentData.attributes.parameters[rgx[5]];\r\n      for (let j = 0; j < param2.length; j++) {\r\n        attrData[\"lvl\" + (j + 1)] += \" \" + Utils.Format(param2[j], rgx[3]);\r\n      }\r\n    }\r\n    tableData.push(attrData);\r\n  }\r\n  let cols = [];\r\n  for (let i = 1; i <= 15; i++) {\r\n    cols.push(<Column width={80} key={talentData.name + \"header\" + i}>\r\n      <HeaderCell>Lvl {i}</HeaderCell>\r\n      <Cell dataKey={\"lvl\" + i} />\r\n    </Column>)\r\n  }\r\n  return <FlexboxGrid className=\"talents\" >\r\n    <FlexboxGrid.Item className=\"name\" colspan={24}>\r\n      <h3>{talentData.name}</h3>\r\n    </FlexboxGrid.Item>\r\n\r\n    <FlexboxGrid className=\"desc\">\r\n      <FlexboxGrid.Item className=\"alignSelfCenter paddedSides\">\r\n        <ImgIcon src={image} img size=\"75\" />\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item className=\"flex1\">\r\n        {Utils.Markdown(talentData.info)}\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n\r\n\r\n    <FlexboxGrid.Item className=\"tabel\" colspan={24}>\r\n      <Table\r\n        data={tableData}\r\n        autoHeight\r\n        wordWrap\r\n      >\r\n        <Column minWidth={120} fixed flexGrow={1}>\r\n          <HeaderCell></HeaderCell>\r\n          <Cell dataKey=\"name\" />\r\n        </Column>\r\n        {cols}\r\n      </Table>\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoTalent;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport Utils from '../../Utils';\r\nimport ImgIcon from '../Icon';\r\n\r\nconst CharacterInfoPassive = ({ passiveData, image }) => {\r\n\r\n  return <FlexboxGrid className=\"constellations\" align=\"middle\">\r\n    <FlexboxGrid.Item className=\"paddedSides\">\r\n      <ImgIcon src={image} img size=\"50\" />\r\n    </FlexboxGrid.Item>\r\n    <FlexboxGrid.Item className=\"flex1\">\r\n      <h3>{passiveData.name}</h3>\r\n      {Utils.Markdown(passiveData.info)}\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoPassive;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport Utils from '../../Utils';\r\nimport ImgIcon from '../Icon';\r\n\r\nconst CharacterInfoConstellations = ({ constellationData }) => {\r\n  let rows = [];\r\n  for (const con in constellationData) {\r\n    if (!con.includes(\"c\")) continue;\r\n    const consData = constellationData[con];\r\n    rows.push(<FlexboxGrid align=\"middle\" className=\"constellation\" key={con}>\r\n      <FlexboxGrid.Item colspan={1}>\r\n        <b>{con}</b>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item className=\"paddedSides\">\r\n        <ImgIcon src={constellationData.images[con]} img size=\"50\" />\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item className=\"flex1\">\r\n        <h3>{consData.name}</h3>\r\n        {Utils.Markdown(consData.effect)}\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>)\r\n  }\r\n  return <FlexboxGrid className=\"constellations\">\r\n    <FlexboxGrid.Item colspan={24}>\r\n      <h1>Constellations</h1>\r\n    </FlexboxGrid.Item>\r\n    <FlexboxGrid.Item colspan={24}>\r\n      {rows}\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoConstellations;","import React from 'react';\r\nimport { FlexboxGrid } from 'rsuite';\r\n\r\nimport '../css/icons.css';\r\n\r\nconst ItemIcon = ({ itemData, count, size, className, onClick }) => {\r\n  size = size || \"24px\";\r\n  className += \" icon\";\r\n  const style = {\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    maxWidth: size,\r\n    maxHeight: size\r\n  }\r\n  return <FlexboxGrid.Item className=\"itemWrapper\">\r\n    <div className=\"item\">\r\n      <img\r\n        src={itemData.images.fandom}\r\n        style={style}\r\n        className={className}\r\n        title={itemData.name}\r\n        alt={itemData.name}\r\n        onClick={onClick}\r\n      />\r\n      <div className=\"itemCount\">\r\n        {count}\r\n      </div>\r\n    </div>\r\n  </FlexboxGrid.Item>\r\n\r\n}\r\n\r\nexport default ItemIcon;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport ItemIcon from '../ItemIcon';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nconst CharacterInfoAscCost = ({ costs }) => {\r\n  console.log(costs);\r\n  let rows = [];\r\n  let ascI = 0;\r\n\r\n  for (const key in costs) {\r\n    const isOdd = ++ascI % 2 === 1;\r\n    const rowName = \"tableRows \" + (isOdd ? \"odd\" : \"even\");\r\n    let sort = {};\r\n    for (let j = 0; j < costs[key].length; j++) {\r\n      const item = genshindb.materials(costs[key][j].name);\r\n      const mType = item.materialtype.replace(/\\(.*\\)\\s*/, \"\").trim();\r\n      sort[mType] = sort[mType] || [];\r\n      sort[mType].push({\r\n        count: costs[key][j].count,\r\n        ...item\r\n      });\r\n    }\r\n    const render = (entry) => {\r\n      let boxes = [];\r\n      for (let k = 0; k < entry.length; k++) {\r\n        const element = entry[k];\r\n        boxes.push(\r\n          <ItemIcon\r\n            itemData={element}\r\n            count={element.count}\r\n            size=\"48px\"\r\n          />\r\n        );\r\n      }\r\n      return <FlexboxGrid justify=\"center\">{boxes}</FlexboxGrid>;\r\n    }\r\n    rows.push(\r\n      <FlexboxGrid align=\"middle\" className={rowName} key={\"ascCost\" + key}>\r\n        <FlexboxGrid.Item colspan={5}>{ascI - 1} &gt; {ascI}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={5}>{sort[\"Common Currency\"][0].count}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={9}>{render(sort[\"Character Level-Up Material\"])}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={5}>{render(sort[\"Local Specialty\"])}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n\r\n  }\r\n  return <div className=\"ascCosts\" >\r\n    <h2>Ascension Costs</h2>\r\n    <FlexboxGrid align=\"middle\" className=\"tableRows header\">\r\n      <FlexboxGrid.Item colspan={5}>Ascension</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={5}>Mora</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={9}>Character Acension Materials</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={5}>Local Specialties</FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n    {rows}\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfoAscCost;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport ItemIcon from '../ItemIcon';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nconst CharacterInfoTalentCost = ({ costs }) => {\r\n  console.log(costs);\r\n  let rows = [];\r\n  let ascI = 0;\r\n\r\n  for (const key in costs) {\r\n    const title = key.replace(/[^0-9](?=[0-9])/g, \"$& \");\r\n    const isOdd = ++ascI % 2 === 1;\r\n    const rowName = \"tableRows \" + (isOdd ? \"odd\" : \"even\");\r\n    let sort = {};\r\n    for (let j = 0; j < costs[key].length; j++) {\r\n      const item = genshindb.materials(costs[key][j].name);\r\n      let mType = item.materialtype.replace(/\\(.*\\)\\s*/, \"\").trim();\r\n      if (mType !== \"Common Currency\") {\r\n        mType = \"Materials\";\r\n      }\r\n      sort[mType] = sort[mType] || [];\r\n      sort[mType].push({\r\n        count: costs[key][j].count,\r\n        ...item\r\n      });\r\n    }\r\n    const render = (entry) => {\r\n      let boxes = [];\r\n      for (let k = 0; k < entry.length; k++) {\r\n        const element = entry[k];\r\n        boxes.push(\r\n          <ItemIcon\r\n            itemData={element}\r\n            count={element.count}\r\n            size=\"48px\"\r\n          />\r\n        );\r\n      }\r\n      return <FlexboxGrid>{boxes}</FlexboxGrid>;\r\n    }\r\n    rows.push(\r\n      <FlexboxGrid align=\"middle\" className={rowName} key={\"ascCost\" + key}>\r\n        <FlexboxGrid.Item colspan={5}>{title}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={5}>{sort[\"Common Currency\"][0].count}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={10} className=\"flex1\">{render(sort[\"Materials\"])}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n  }\r\n  return <div className=\"talentCosts\" >\r\n    <h2>Talent Costs</h2>\r\n    <FlexboxGrid align=\"middle\" className=\"tableRows header\">\r\n      <FlexboxGrid.Item colspan={5}>Level</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={5}>Mora</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={10} className=\"flex1\">Materials</FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n    {rows}\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfoTalentCost;","import CharacterInfoHeader from './CharacterInfoHeader';\r\nimport CharacterInfoStats from './CharacterInfoStats';\r\nimport CharacterInfoTalent from './CharacterInfoTalent';\r\nimport CharacterInfoPassive from './CharacterInfoPassive';\r\nimport CharacterInfoConstellations from './CharacterInfoConstellations';\r\nimport CharacterInfoAscCost from './CharacterInfoAscCosts';\r\nimport CharacterInfoTalentCost from './CharacterinfoTalentCosts';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nconst CharacterInfo = ({ data }) => {\r\n  const name = data.talentName;\r\n  const talents = genshindb.talents(name);\r\n  const constellations = genshindb.constellations(name);\r\n  let passives = [];\r\n  for (const talent in talents) {\r\n    if (talent.includes(\"passive\")) {\r\n      passives.push(\r\n        <CharacterInfoPassive\r\n          key={\"passive\" + talent}\r\n          passiveData={talents[talent]}\r\n          image={talents.images[talent]}\r\n        />)\r\n    }\r\n  }\r\n  return <div className=\"characterInfo\">\r\n    <h1>{name}</h1>\r\n    <CharacterInfoHeader data={data} />\r\n    <CharacterInfoStats data={data} />\r\n    <CharacterInfoAscCost costs={data.costs} />\r\n    <h1>Talents</h1>\r\n    <CharacterInfoTalent talentData={talents.combat1} image={talents.images.combat1} />\r\n    <CharacterInfoTalent talentData={talents.combat2} image={talents.images.combat2} />\r\n    <CharacterInfoTalent talentData={talents.combat3} image={talents.images.combat3} />\r\n    <CharacterInfoTalentCost costs={talents.costs} />\r\n    <h1>Passives</h1>\r\n    {passives}\r\n    <CharacterInfoConstellations constellationData={constellations} />\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfo;","import React, { memo } from 'react';\r\n\r\nimport Utils from '../Utils';\r\nimport changeLog from '../changeLog.json';\r\nimport { FlexboxGrid, Modal } from 'rsuite';\r\n\r\nconst Updates = ({ show, onHide }) => {\r\n  let blocks = [];\r\n  for (const key in changeLog) {\r\n    if (Object.hasOwnProperty.call(changeLog, key)) {\r\n      const value = changeLog[key];\r\n      blocks.push(<FlexboxGrid className=\"row\" key={\"update\" + key}>\r\n        <FlexboxGrid.Item colspan={4}>{key}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={20}>{Utils.Markdown(value)}</FlexboxGrid.Item>\r\n      </FlexboxGrid>)\r\n    }\r\n  }\r\n  return <Modal show={show} onHide={onHide} className=\"updates\">\r\n    <Modal.Header>\r\n      <Modal.Title>Change log</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      {blocks}\r\n    </Modal.Body>\r\n  </Modal>\r\n}\r\n\r\nexport default Updates;","import { memo } from 'react';\r\nimport { Button, Content, Icon } from 'rsuite';\r\nimport Updates from './Updates';\r\n\r\nconst About = memo(({ onShowUpdate }) => {\r\n  return <Content className=\"content about\">\r\n    <Button onClick={onShowUpdate}>\r\n      View Changelog\r\n    </Button>\r\n\r\n    <h2>Contact</h2>\r\n\r\n    <a href=\"https://github.com/Queue-cs/Genshin\">\r\n      <Icon icon=\"github\" size=\"2x\" />&nbsp;\r\n      Queue-cs/Genshin\r\n    </a><br />\r\n\r\n    <a href=\"https://twitter.com/QueueCs\">\r\n      <Icon icon=\"twitter\" size=\"2x\" />&nbsp;\r\n      @QueueCs\r\n    </a>\r\n\r\n    <h2>Sources</h2>\r\n    <div className=\"truncate\">\r\n      <a href=\"https://genshin-impact.fandom.com/\">\r\n        https://genshin-impact.fandom.com/\r\n      </a>\r\n      <br />\r\n      <a href=\"https://github.com/theBowja/genshin-db\">\r\n        https://github.com/theBowja/genshin-db\r\n      </a>\r\n    </div>\r\n\r\n  </Content>\r\n})\r\n\r\nexport default About;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { FlexboxGrid, Container, Header, Icon } from 'rsuite';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport NavBar from './NavBar';\r\nimport Characters from './Characters/Characters';\r\nimport About from './About';\r\n\r\nimport '../css/app.css';\r\nimport Updates from './Updates';\r\n\r\n// get original url hash\r\n(function (location) {\r\n  let search = location.search;\r\n  if (location.hash && location.hash[1] === '/') {\r\n    search = '?path=' + location.hash.slice(2);\r\n  }\r\n  if (search) {\r\n    const path = /path=(.*?)(?:&|$)/.exec(search);\r\n    const hash = /hash=(.*?)(?:&|$)/.exec(search);\r\n    let newPath = '';\r\n    if (path) newPath += path[1];\r\n    if (hash) newPath += '#' + hash[1];\r\n    if (newPath) {\r\n      window.history.replaceState(null, null, '/' + newPath);\r\n    }\r\n  }\r\n})(window.location);\r\n\r\nconst App = observer(class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdates: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.store.lastVisitVersion);\r\n    this.setState({\r\n      showUpdates: this.props.store.outDated\r\n    })\r\n  }\r\n\r\n  onShowUpdate = () => {\r\n    this.setState({\r\n      showUpdates: true\r\n    })\r\n    console.log(\"ran\");\r\n  }\r\n\r\n  onHideUpdate = () => {\r\n    this.setState({\r\n      showUpdates: false\r\n    })\r\n    this.props.store.ForceSave();\r\n  }\r\n\r\n  render() {\r\n    const { store } = this.props;\r\n    const isReady = store.isReady;\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Container>\r\n          <Header>\r\n            <Route render={routeProps => (\r\n              <NavBar store={store} {...routeProps} />\r\n            )} />\r\n          </Header>\r\n          <FlexboxGrid justify=\"center\">\r\n            {\r\n              isReady &&\r\n              <Switch>\r\n                <Route path=\"/weapons\"></Route>\r\n                <Route path=\"/useful-info\"></Route>\r\n                <Route path=\"/about\">\r\n                  <About onShowUpdate={this.onShowUpdate} />\r\n                </Route>\r\n                <Route path=\"/schedule\">\r\n                  {/* <Content className=\"content schedule\">\r\n                  <Schedule store={store} />\r\n                </Content> */}\r\n                </Route>\r\n                <Route path={[\"/characters/:characterID\", \"*\"]} render={routeProps => (\r\n                  <Characters store={store} {...routeProps} />\r\n                )} />\r\n\r\n              </Switch>\r\n            }\r\n            {\r\n              !isReady &&\r\n              <Icon icon=\"spinner\" spin size=\"2x\" className=\"pageLoading\" />\r\n            }\r\n          </FlexboxGrid>\r\n        </Container>\r\n        <Updates show={this.state.showUpdates} onHide={this.onHideUpdate} />\r\n      </Router>\r\n    );\r\n  }\r\n})\r\n\r\nexport default App;","import { makeAutoObservable, toJS } from \"mobx\";\r\n\r\nimport changeLog from '../changeLog.json';\r\n\r\nclass Store {\r\n  lastVisitVersion = \"0\";\r\n  windowWidth = 0;\r\n\r\n  ready = false;\r\n  needsSave = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this, { needsSave: false }, { autoBind: true });\r\n    this.Load();\r\n    setInterval(this.Save, 5000);\r\n    window.addEventListener(\"beforeunload\", () => {\r\n      this.ForceSave();\r\n    })\r\n    window.addEventListener(\"resize\", () => {\r\n      this.Update({\r\n        windowWidth: window.innerWidth\r\n      });\r\n    });\r\n    this.windowWidth = window.innerWidth;\r\n  }\r\n\r\n  Save() {\r\n    if (!this.needsSave) return;\r\n    this.needsSave = false;\r\n    localStorage.setItem(\"local\", JSON.stringify(this.toOBJ));\r\n  }\r\n\r\n  Load() {\r\n    const storedLocal = JSON.parse(localStorage.getItem(\"local\") || \"{}\");\r\n    this.FromOBJ(storedLocal);\r\n    this.ready = true;\r\n  }\r\n\r\n  Defaults() {\r\n    return {\r\n      lastVisitVersion: \"0\"\r\n    }\r\n  }\r\n\r\n  get toOBJ() {\r\n    // const data = toJS(this);\r\n    return {\r\n      lastVisitVersion: changeLog.currentVersion\r\n    }\r\n  }\r\n\r\n  FromOBJ(obj) {\r\n    let changes = this.Defaults();\r\n    for (const key in changes) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        changes[key] = obj[key];\r\n      }\r\n    }\r\n    this.Update(changes);\r\n  }\r\n\r\n  Update(state) {\r\n    for (const key in state) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = state[key];\r\n      }\r\n    }\r\n    this.needsSave = true;\r\n  }\r\n\r\n  ForceSave() {\r\n    this.needsSave = true\r\n    this.Save();\r\n  }\r\n\r\n  get isXS() {\r\n    return this.windowWidth < 576;\r\n  }\r\n\r\n  get isMD() {\r\n    return this.windowWidth >= 576 && this.windowWidth < 768;\r\n  }\r\n\r\n  get isLG() {\r\n    return this.windowWidth >= 768;\r\n  }\r\n\r\n  get outDated() {\r\n    return this.lastVisitVersion !== changeLog.currentVersion;\r\n  }\r\n\r\n  get isReady() {\r\n    return this.ready;\r\n  }\r\n}\r\n\r\nexport default new Store();","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// import './css/index.css';\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nimport App from './components/App';\nimport Store from './store/Store';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(\n  <App store={Store} />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["../../genshin-db/src/main.js","../../genshin-db/src/language.js","../../genshin-db/src/folder.js","../../genshin-db/src/getdata.js","../../genshin-db/src/altnames.js","../../genshin-db/src/helper.js","components/Characters/Characters.js","components/NavBar.js","components/Icon.js","components/Tags/Tags.js","components/Tags/VisionTags.js","components/Tags/WeaponTags.js","components/Tags/CharacterRarityTags.js","Utils.js","components/Characters/CharactersList.js","components/Characters/CharacterInfoHeader.js","components/Characters/CharacterInfoStats.js","components/Characters/CharacterInfoTalent.js","components/Characters/CharacterInfoPassive.js","components/Characters/CharacterInfoConstellations.js","components/ItemIcon.js","components/Characters/CharacterInfoAscCosts.js","components/Characters/CharacterinfoTalentCosts.js","components/Characters/CharacterInfo.js","components/About.js","components/Updates.js","components/Tags/WeaponRarityTags.js","components/Weapons/WeaponsList.js","components/Weapons/WeaponInfoHeader.js","components/Weapons/WeaponInfoRefinements.js","components/Weapons/WeaponInfoStats.js","components/Weapons/WeaponInfo.js","components/Weapons/Weapons.js","components/ScrollToTop.js","components/App.js","store/Store.js","index.js"],"names":["fuzzysort","require","language","Folder","altnames","getData","getIndex","genshin","baseoptions","matchAltNames","matchAliases","matchCategories","verboseCategories","queryLanguages","resultLanguage","sanitizeOptions","opts","sanOpts","forEach","prop","format","undefined","Array","isArray","searchFolder","query","folder","getfilename","Object","assign","input","dict","result","go","limit","target","autocomplete","querylangs","lang","index","names","concat","keys","getAltNamesList","aliases","categories","buildQueryDict","langindex","filename","getFilename","reslangindex","values","reduce","accum","res","namemap","push","setOptions","options","getOptions","JSON","parse","stringify","characters","character","talents","talent","weapons","weapon","weaponmaterialtypes","weaponmaterialtype","talentmaterialtypes","talentmaterialtype","materials","material","elements","element","constellations","constellation","artifacts","artifact","rarity","foods","food","domains","domain","enemies","enemy","helper","Language","LanguagesEnum","Languages","Folders","addAltName","altname","removeAltNames","setAltNameLimits","setLimit","module","exports","languageMap","languages","languageCodes","languageDict","localeMap","langs","length","autocompleteLanguage","tmp","l","includes","alldata","allindex","allimage","allurl","allstats","allcurve","availableimage","availableurl","availablestats","calcStatsMap","mystats","getStats","mycurve","getCurve","level","ascension","parseInt","isNaN","getPromotionBonus","promotion","phase","output","hp","base","curve","attack","defense","specialized","critrate","critdmg","maxlevel","getImage","e","promotions","Number","isFinite","images","url","getURL","stats","combat1","parameters","data","myparams","attributes","setAttributesTalent","altnameindex","count","baselimits","maxLength","maxCount","isValidFolder","isValidLanguage","isEmpty","obj","x","hasOwnProperty","limits","isValidAltName","isValidFilename","str","normalize","replace","toLowerCase","substat","subvalue","effect","numbers","i","acc","curr","RegExp","NavLinks","onClick","Fragment","Nav","Item","eventKey","componentClass","Link","to","NavBar","observer","props","toggleMenu","setState","showMenu","state","onWindowScroll","currentScroll","window","pageYOffset","delta","prevScroll","Math","abs","hide","top","addEventListener","this","removeEventListener","isXS","store","activeKey","location","pathname","barStyle","height","linksStyle","className","style","vertical","Navbar","Body","Header","padding","Button","appearance","Icon","icon","size","React","Component","ImgIcon","src","img","alt","width","title","Tags","onSelect","newValue","tags","selected","tagIndex","indexOf","splice","onChange","Function","defaultSelected","list","blocks","key","isActive","active","visionList","VisionTags","weaponList","WeaponTags","characterRarityList","CharacterRarityTags","val","round","FormatNumber","type","reg","sub","value","isPercent","Format","a","b","sortorder","string","replaceAll","history","loc","fromDashboard","react","isValidElement","getPrototypeOf","proto","prototype","toString","call","CharactersList","onSearch","search","setVisions","newTags","setWeapons","setRarity","charaRender","weapontype","talentName","costs","allCosts","genshindb","lvlMats","cKey","item","name","mType","materialtype","trim","prev","lvlMatsSorted","sort","current","Utils","SimilarMaterial","mats","mat","href","fandom","rel","maxWidth","stars","FlexboxGrid","colspan","visions","charactersDB","charaName","InputGroup","Input","Addon","PureComponent","CharacterInfoHeader","displayData","gender","body","birthday","region","affiliation","cv","rows","isOdd","isPlainObject","tempValue","key2","Col","mdHidden","lgHidden","cover1","md","sm","xs","xsHidden","smHidden","entries","CharacterInfoStats","ascRows","asc","inner","j","stat","rowName","align","Column","Table","HeaderCell","Cell","CharacterInfoTalent","talentData","image","tableData","labels","rgx","match","param","attrData","param2","cols","dataKey","Markdown","info","autoHeight","wordWrap","minWidth","fixed","flexGrow","CharacterInfoPassive","passiveData","CharacterInfoConstellations","constellationData","con","consData","ItemIcon","itemData","maxHeight","CharacterInfoAscCost","ascI","render","entry","boxes","k","justify","CharacterInfoTalentCost","CharacterInfo","passives","combat2","combat3","allCharas","imageCount","card","cover2","portrait","iKey","Characters","params","characterID","Content","About","memo","onShowUpdate","Updates","show","onHide","changeLog","Modal","Title","currentVersion","weaponRarityList","WeaponRarityTags","WeaponsList","updateSort","weaponsDB","rarityAsc","baseAsc","wList","deltaRarity","lvl90a","lvl90b","deltaBase","weaponRender","effectname","baseatk","r1","lvl90","baseAtk90","sub90","FormatWSub","subSuffix","slice","StringFormat","toggleBaseAsc","toggleRarityAsc","wepKey","WeaponInfoHeader","description","WeaponInfoRefinements","refinements","r2","r3","r4","r5","console","log","r","lvls","WeaponInfoStats","ascKey","costInner","cost","costKey","costE","WeaponInfo","Weapons","allWeapons","sortedDB","flatDB","wepName","weaponID","ScrollToTop","useLocation","useEffect","scrollTo","App","showUpdates","onHideUpdate","ForceSave","outDated","isReady","basename","process","Container","routeProps","path","spin","lastVisitVersion","windowWidth","ready","needsSave","makeAutoObservable","autoBind","Load","setInterval","Save","Update","innerWidth","localStorage","setItem","toOBJ","storedLocal","getItem","FromOBJ","changes","Defaults","exec","newPath","replaceState","ReactDOM","Store","document","getElementById"],"mappings":"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","file":"static/js/main.97643bd8.chunk.js","sourcesContent":["const fuzzysort = require('fuzzysort');\r\n//const design = require('./design.json');\r\nconst language = require('./language.js');\r\nconst Folder = require('./folder.js');\r\nconst altnames = require('./altnames.js');\r\nconst { getData, getIndex } = require('./getdata.js');\r\n\r\n// object that will be exported\r\nconst genshin = {};\r\n\r\n// Options that we'll start off with.\r\nlet baseoptions = {\r\n    matchAltNames: true, // Allows the matching of alternate or custom names.\r\n    matchAliases: false, // Allows the matching of aliases. These are searchable fields that returns the data object the query matched in.\r\n    matchCategories: false, // Allows the matching of categories. If true, then returns an array if it matches.\r\n    verboseCategories: false, // Used if a category is matched. If true, then replaces each string name in the array with the data object instead.\r\n    queryLanguages: [\"English\"], // Array of languages that your query will be searched in.\r\n    resultLanguage: \"English\" // Output language that you want your results to be in.\r\n}\r\n\r\ngenshin.setOptions = function(options) {\r\n    Object.assign(baseoptions, sanitizeOptions(options));\r\n}\r\n\r\ngenshin.getOptions = function() {\r\n    return JSON.parse(JSON.stringify(baseoptions));\r\n}\r\n\r\n/**\r\n * get rid of unnecessary properties\r\n */\r\nfunction sanitizeOptions(opts) {\r\n    if(typeof opts !== 'object' || opts === null) return undefined;\r\n\r\n    let sanOpts = {};\r\n    ['matchAltNames', 'matchAliases', 'matchCategories', 'verboseCategories'].forEach(prop => {\r\n        if(typeof opts[prop] === 'boolean') sanOpts[prop] = opts[prop];\r\n    });\r\n    opts.resultLanguage = language.format(opts.resultLanguage);\r\n    if(opts.resultLanguage !== undefined)\r\n        sanOpts.resultLanguage = opts.resultLanguage;\r\n    opts.queryLanguages = language.format(opts.queryLanguages);\r\n    if(opts.queryLanguages !== undefined)\r\n        sanOpts.queryLanguages = Array.isArray(opts.queryLanguages) ? opts.queryLanguages : [opts.queryLanguages];\r\n    return sanOpts;\r\n}\r\n\r\n// returns an array of strings used for autocomplete aka fuzzy searching\r\nfunction buildQueryDict(querylangs, folder, opts) {\r\n    let dict = opts.matchCategories ? ['names'] : [];\r\n    for(const lang of querylangs) {\r\n        const index = getIndex(lang, folder);\r\n        if(index === undefined) continue;\r\n        if(index.names)\r\n            dict = dict.concat(Object.keys(index.names));\r\n        if(opts.matchAltNames)\r\n            dict = dict.concat(altnames.getAltNamesList(lang, folder));\r\n        if(opts.matchAliases && index.aliases)\r\n            dict = dict.concat(Object.keys(index.aliases));\r\n        if(opts.matchCategories && index.categories)\r\n            dict = dict.concat(Object.keys(index.categories));\r\n    }\r\n    return dict;\r\n}\r\n\r\nfunction autocomplete(input, dict) {\r\n    let result = fuzzysort.go(input, dict, { limit: 1 })[0];\r\n    return result === undefined ? undefined : result.target;\r\n}\r\n\r\n// genshin.categories = function(query, opts={}) {\r\n//     opts = Object.assign({}, baseoptions, sanitizeOptions(opts));\r\n\r\n//     const file = getCategory(opts.resultLanguage);\r\n//     return file[query] ? file[query] : [];\r\n// }\r\n\r\n// TODO: use a better name lol\r\n// TODO: if folder is undefined, search through every folder\r\nfunction searchFolder(query, folder, opts, getfilename) {\r\n    opts = Object.assign({}, baseoptions, sanitizeOptions(opts));\r\n    query = autocomplete(\"\"+query, buildQueryDict(opts.queryLanguages, folder, opts));\r\n    if(query === undefined) return undefined; // no result\r\n\r\n    for(let lang of opts.queryLanguages) {\r\n        let langindex = getIndex(lang, folder);\r\n        if(langindex === undefined) continue;\r\n\r\n        // check if query is in .names\r\n        if(langindex.names[query] !== undefined) {\r\n            const filename = langindex.names[query];\r\n            if(getfilename) return filename;\r\n            return getData(opts.resultLanguage, folder, filename);\r\n        }\r\n\r\n        // check if query is in .altnames\r\n        if(opts.matchAltNames && altnames.getFilename(lang, folder, query)) {\r\n            const filename = altnames.getFilename(lang, folder, query);\r\n            if(getfilename) return filename;\r\n            return getData(opts.resultLanguage, folder, filename);\r\n        }\r\n\r\n        // check if query is in .aliases\r\n        if(opts.matchAliases && langindex.aliases[query] !== undefined) {\r\n            const filename = langindex.aliases[query];\r\n            if(getfilename) return filename;\r\n            return getData(opts.resultLanguage, folder, filename);\r\n        }\r\n\r\n        // check if query is in .categories or is 'names'\r\n        if(opts.matchCategories && (langindex.categories[query] !== undefined || query === 'names')) {\r\n            let reslangindex = getIndex(opts.resultLanguage, folder);\r\n            if(reslangindex === undefined) return undefined;\r\n\r\n            let tmparr = (query === 'names') ? Object.values(reslangindex.names) : langindex.categories[query];\r\n            // change the array of filenames into an array of data objects or data names. ignores undefined results if any\r\n            return tmparr.reduce((accum, filename) => {\r\n                let res = opts.verboseCategories ? getData(opts.resultLanguage, folder, filename) : reslangindex.namemap[filename];\r\n                if(res !== undefined) accum.push(res);\r\n                return accum;\r\n            }, []);\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n\r\ngenshin.characters = function(query, opts) {\r\n    return searchFolder(query, Folder.characters, opts);\r\n}\r\ngenshin.character = genshin.characters;\r\n\r\ngenshin.talents = function(query, opts) {\r\n    return searchFolder(query, Folder.talents, opts);\r\n}\r\ngenshin.talent = genshin.talents;\r\n\r\ngenshin.weapons = function(query, opts) {\r\n    return searchFolder(query, Folder.weapons, opts);\r\n}\r\ngenshin.weapon = genshin.weapons;\r\n\r\ngenshin.weaponmaterialtypes = function(query, opts) {\r\n    return searchFolder(query, Folder.weaponmaterialtypes, opts);\r\n}\r\ngenshin.weaponmaterialtype = genshin.weaponmaterialtypes;\r\n\r\ngenshin.talentmaterialtypes = function(query, opts) {\r\n    return searchFolder(query, Folder.talentmaterialtypes, opts);\r\n}\r\ngenshin.talentmaterialtype = genshin.talentmaterialtypes;\r\n\r\ngenshin.materials = function(query, opts) {\r\n    return searchFolder(query, Folder.materials, opts);\r\n}\r\ngenshin.material = genshin.materials;\r\n\r\ngenshin.elements = function(query, opts) {\r\n    return searchFolder(query, Folder.elements, opts);\r\n}\r\ngenshin.element = genshin.elements;\r\n\r\ngenshin.constellations = function(query, opts) {\r\n    return searchFolder(query, Folder.constellations, opts);\r\n}\r\ngenshin.constellation = genshin.constellations;\r\n\r\ngenshin.artifacts = function(query, opts) {\r\n    return searchFolder(query, Folder.artifacts, opts);\r\n}\r\ngenshin.artifact = genshin.artifacts;\r\n\r\ngenshin.rarity = function(query, opts) {\r\n    return searchFolder(query, Folder.rarity, opts);\r\n}\r\n\r\ngenshin.foods = function(query, opts) {\r\n    return searchFolder(query, Folder.foods, opts);\r\n}\r\ngenshin.food = genshin.foods;\r\n\r\ngenshin.domains = function(query, opts) {\r\n    return searchFolder(query, Folder.domains, opts);\r\n}\r\ngenshin.domain = genshin.domains;\r\n\r\ngenshin.enemies = function(query, opts) {\r\n    return searchFolder(query, Folder.enemies, opts);\r\n}\r\ngenshin.enemy = genshin.enemies;\r\n\r\n// genshin.reactions = function(query, opts={}) {\r\n//     opts = Object.assign({}, baseoptions, sanitizeOptions(opts));\r\n\r\n//     const data = getJSON(`./${baselang}/reactions/${query}`);\r\n\r\n//     return data;\r\n// }\r\n\r\ngenshin.helper = require('./helper.js');\r\n\r\n// export enums\r\ngenshin.Language = language.LanguagesEnum;\r\ngenshin.Languages = language.LanguagesEnum;\r\ngenshin.Folder = Folder;\r\ngenshin.Folders = Folder;\r\n\r\n// export custom alternate names api\r\ngenshin.addAltName = function(language, folder, altname, query) {\r\n    const myOptions = {\r\n        matchAltNames: false,\r\n        matchAliases: false,\r\n        matchCategories: false,\r\n        verboseCategories: false,\r\n        queryLanguages: [language],\r\n    }\r\n    const filename = searchFolder(query, folder, myOptions, true)\r\n    if(filename)\r\n        return altnames.addAltName(language, folder, altname, filename);\r\n    else\r\n        return false;\r\n}\r\ngenshin.removeAltNames = altnames.removeAltNames;\r\ngenshin.setAltNameLimits = altnames.setLimit;\r\n\r\n\r\nmodule.exports = genshin;","const fuzzysort = require('fuzzysort');\r\n\r\nconst LanguagesEnum = {\r\n\t'ChineseSimplified'  : 'ChineseSimplified',\r\n\t'ChineseTraditional' : 'ChineseTraditional',\r\n\t'English'            : 'English',\r\n\t'French'             : 'French',\r\n\t'German'             : 'German',\r\n\t'Indonesian'         : 'Indonesian',\r\n\t'Japanese'           : 'Japanese',\r\n\t'Korean'             : 'Korean',\r\n\t'Portuguese'         : 'Portuguese',\r\n\t'Russian'            : 'Russian',\r\n\t'Spanish'            : 'Spanish',\r\n\t'Thai'               : 'Thai',\r\n\t'Vietnamese'         : 'Vietnamese'\r\n};\r\n\r\n// converts Genshin's language codes into expanded strings\r\nconst languageMap = {\r\n\t'CHS': 'ChineseSimplified',\r\n\t'CHT': 'ChineseTraditional',\r\n\t'DE':  'German',\r\n\t'EN':  'English',\r\n\t'ES':  'Spanish',\r\n\t'FR':  'French',\r\n\t'ID':  'Indonesian',\r\n\t'JP':  'Japanese',\r\n\t'KR':  'Korean',\r\n\t'PT':  'Portuguese',\r\n\t'RU':  'Russian',\r\n\t'TH':  'Thai',\r\n\t'VI':  'Vietnamese'\r\n};\r\n// array of language strings\r\nconst languages = Object.values(languageMap);\r\n// array of language codes\r\nconst languageCodes = Object.keys(languageMap);\r\n\r\n// // converts expanded strings into javascript locale codes\r\nconst localeMap = {\r\n\t'ChineseSimplified':  'zh-cn',\r\n\t'ChineseTraditional': 'zh-tw',\r\n\t'German':             'de',\r\n\t'English':            'en',\r\n\t'Spanish':            'es',\r\n\t'French':             'fr',\r\n\t'Indonesian':         'id',\r\n\t'Japanese':           'ja',\r\n\t'Korean':             'ko',\r\n\t'Portuguese':         'pt',\r\n\t'Russian':            'ru',\r\n\t'Thai':               'th',\r\n\t'Vietnamese':         'vi'\r\n};\r\n\r\nconst languageDict = Object.keys(languageMap).concat(Object.values(languageMap));\r\n\r\nfunction autocompleteLanguage(input, dict) {\r\n    let result = fuzzysort.go(input, dict, { limit: 1 })[0];\r\n    if(result !== undefined)\r\n    \tresult = result.target.length < 4 ? languageMap[result.target] : result.target;\r\n    return result;\r\n}\r\n\r\n/**\r\n * @param langs - a string or array of strings\r\n * @returns - autocompleted full name of the language. see languageMap.\r\n *            undefined if none of the strings are valid languages.\r\n */\r\nfunction format(langs) {\r\n    if(typeof langs === 'string') {\r\n        return autocompleteLanguage(langs, languageDict);\r\n    } else if(Array.isArray(langs)) {\r\n        let tmp = [];\r\n        for(let l of langs) {\r\n            l = format(l);\r\n            if(l && !tmp.includes(l)) tmp.push(l);\r\n        }\r\n        if(tmp.length) return tmp;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nmodule.exports = {\r\n\tLanguagesEnum: LanguagesEnum,\r\n\tlanguages: languages,\r\n\tlanguageCodes: languageCodes,\r\n\tlanguageMap: languageMap,\r\n\tlocaleMap: localeMap,\r\n\tformat: format\r\n};","// enum for folders. // make sure update index.d.ts too\r\n// not really used internally. mainly for altnames api\r\nmodule.exports = {\r\n\tcharacters     : 'characters',\r\n\ttalents        : 'talents',\r\n\tconstellations : 'constellations',\r\n\t\r\n\tweapons        : 'weapons',\r\n\r\n\tfoods          : 'foods',\r\n\tmaterials      : 'materials',\r\n\tweaponmaterialtypes: 'weaponmaterialtypes',\r\n\ttalentmaterialtypes: 'talentmaterialtypes',\r\n\r\n\tartifacts      : 'artifacts',\r\n\tdomains        : 'domains',\r\n\tenemies        : 'enemies',\r\n\r\n\trarity         : 'rarity',\r\n\telements       : 'elements'\r\n};","const alldata  = require('./min/data.min.json');\r\nconst allindex = require('./min/index.min.json');\r\nconst allimage = require('./min/image.min.json');\r\nconst allurl   = require('./min/url.min.json');\r\nconst allstats = require('./min/stats.min.json');\r\nconst allcurve = require('./min/curve.min.json');\r\n\r\nconst availableimage = ['characters', 'artifacts', 'weapons', 'constellations', 'talents', 'materials', 'foods', 'elements', 'domains', 'enemies'];\r\nconst availableurl   = ['characters', 'artifacts', 'weapons', 'foods', 'materials'];\r\nconst availablestats = ['characters', 'weapons'];\r\nconst availablecurve = ['characters', 'weapons'];\r\n\r\nconst calcStatsMap = {\r\n    'characters': calcStatsCharacter,\r\n    'weapons': calcStatsWeapon\r\n};\r\n\r\nfunction getData(lang, folder, filename) {\r\n    try {\r\n        let tmp = alldata[lang][folder][filename];\r\n        if(tmp.images === undefined && availableimage.includes(folder)) {\r\n            tmp.images = getImage(folder, filename);\r\n        }\r\n        if(tmp.url === undefined && availableurl.includes(folder)) {\r\n            tmp.url = getURL(folder, filename);\r\n        }\r\n        if(tmp.stats === undefined && availablestats.includes(folder) && calcStatsMap[folder]) {\r\n            tmp.stats = calcStatsMap[folder](filename);\r\n        }\r\n        if(folder === 'talents' && tmp.combat1.parameters === undefined) {\r\n            setAttributesTalent(tmp, filename);\r\n        }\r\n        return tmp;\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getIndex(lang, folder) {\r\n    try {\r\n        return allindex[lang][folder];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getImage(folder, filename) {\r\n    try {\r\n        return allimage[folder][filename];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getURL(folder, filename) {\r\n    try {\r\n        return allurl[folder][filename];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getStats(folder, filename) {\r\n    try {\r\n        return allstats[folder][filename];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction getCurve(folder) {\r\n    try {\r\n        return allcurve[folder];\r\n    } catch(e) { return undefined; }\r\n}\r\n\r\nfunction calcStatsCharacter(filename) {\r\n    const mystats = getStats('characters', filename);\r\n    const mycurve = getCurve('characters');\r\n    if(mystats === undefined || mycurve === undefined) return undefined;\r\n    /** \r\n     * Calculates the stats of a character at a specific level and ascension phase.\r\n     * @param level: number - level. number between 1-90. returns undefined if not within range.\r\n     * @param ascension: undefined | number | string - the ascension number, or '-'/'+'. defaults to '-'.\r\n     *                   only decides which stats to return at level boundaries (20, 40, 50, 60, 70, 80).\r\n     */\r\n    return function(level, ascension) {\r\n        level = parseInt(level, 10);\r\n        if(isNaN(level)) return undefined;\r\n        if(level > 90 || level < 1) return undefined;\r\n\r\n        const [phase, promotion] = getPromotionBonus(mystats.promotion, level, ascension);\r\n        let output = {\r\n            level: level,\r\n            ascension: phase,\r\n            hp: mystats.base.hp * mycurve[level][mystats.curve.hp] + promotion.hp,\r\n            attack: mystats.base.attack * mycurve[level][mystats.curve.attack] + promotion.attack,\r\n            defense: mystats.base.defense * mycurve[level][mystats.curve.defense] + promotion.defense,\r\n            specialized: promotion.specialized\r\n        };\r\n        if(mystats.specialized === 'FIGHT_PROP_CRITICAL')\r\n            output.specialized += mystats.base.critrate;\r\n        else if(mystats.specialized === 'FIGHT_PROP_CRITICAL_HURT')\r\n            output.specialized += mystats.base.critdmg;\r\n\r\n        return output;\r\n    }\r\n}\r\n\r\nfunction calcStatsWeapon(filename) {\r\n    const mystats = getStats('weapons', filename);\r\n    const mycurve = getCurve('weapons');\r\n    if(mystats === undefined || mycurve === undefined) return undefined;\r\n    const maxlevel = mystats.promotion[mystats.promotion.length-1].maxlevel;\r\n    /**\r\n     * Calculates the stats of a weapon at a specific level and ascension phase.\r\n     */\r\n    return function(level, ascension) {\r\n        level = parseInt(level, 10);\r\n        if(isNaN(level)) return undefined;\r\n        if(level > maxlevel || level < 1) return undefined;\r\n\r\n       const [phase, promotion] = getPromotionBonus(mystats.promotion, level, ascension);\r\n        let output = {\r\n            level: level,\r\n            ascension: phase,\r\n            attack: mystats.base.attack * mycurve[level][mystats.curve.attack] + promotion.attack,\r\n            specialized: mystats.base.specialized * mycurve[level][mystats.curve.specialized]\r\n        };\r\n\r\n        return output; \r\n    }\r\n}\r\n\r\n/**\r\n * @param level: integer\r\n * @param ascension: undefined | number | string - the ascension number, or '-'/'+'. defaults to '-'.\r\n *                   only decides which stats to return at level boundaries.\r\n */\r\nfunction getPromotionBonus(promotions, level, ascension) {\r\n    for(let index = promotions.length - 2; index >= 0; index--) {\r\n        if(level > promotions[index].maxlevel) {\r\n            return [index+1, promotions[index+1]];\r\n        } else if(level === promotions[index].maxlevel) {\r\n            if(Number.isFinite(ascension) && ascension > index || ascension === '+')\r\n                return [index+1, promotions[index+1]];\r\n            else\r\n                return [index, promotions[index]];\r\n        }\r\n    }\r\n    return [0, promotions[0]];\r\n}\r\n\r\nfunction setAttributesTalent(data, filename) {\r\n    const myparams = getStats('talents', filename);\r\n    for(const prop of ['combat1', 'combat2', 'combatsp', 'combat3']) {\r\n        if(myparams[prop] === undefined) continue;\r\n        data[prop].attributes.parameters = myparams[prop];\r\n    }\r\n}\r\n\r\n\r\n\r\nmodule.exports = {\r\n    getData: getData,\r\n    getIndex: getIndex,\r\n    getImage: getImage,\r\n    getStats: getStats\r\n}","const Folder = require('./folder.js');\r\nconst { LanguagesEnum } = require('./language.js');\r\nconst { getIndex } = require('./getdata.js');\r\n\r\n// object to export\r\nlet altnames = {}\r\n\r\n\r\nlet altnameindex = { count: 0 };\r\n\r\n/* type checking of altnameindex\r\n{\r\n\tcount: number;\r\n\t[folder: Folder]?: {\r\n\t\t[language: LanguagesEnum]?: {\r\n\t\t\t[altname: string]: filename; // filename is a string\r\n\t\t}\r\n\t}\t\r\n}\r\n*/\r\n\r\nlet baselimits = {\r\n\tmaxLength: 100,\r\n\tmaxCount: 1000\r\n};\r\n\r\n\r\nfunction isValidFolder(folder) {\r\n\treturn typeof folder === 'string' && Folder[folder];\r\n}\r\nfunction isValidLanguage(language) {\r\n\treturn typeof language === 'string' && LanguagesEnum[language];\r\n}\r\nfunction isValidAltName(altname) {\r\n\treturn typeof altname === 'string' && altname.length > 0 && altname.length <= baselimits.maxLength;\r\n}\r\nfunction isValidFilename(filename, language, folder) {\r\n\tif(typeof filename !== 'string') return false;\r\n\tconst index = getIndex(language, folder);\r\n\treturn index !== undefined && index.namemap[filename] !== undefined;\r\n}\r\n\r\nfunction isEmpty(obj) {\r\n\tfor(let x in obj) { if(obj.hasOwnProperty(x)) return false; }\r\n\treturn true;\r\n}\r\n\r\naltnames.setLimit = function(limits) {\r\n\tif(typeof limits.maxLength  === 'number')\r\n\t\tbaselimits.maxLength = limits.maxLength;\r\n\tif(typeof limits.maxCount === 'number')\r\n\t\tbaselimits.maxCount = limits.maxCount;\r\n}\r\n\r\n// see examples at the bottom of this script\r\naltnames.addAltName = function(language, folder, altname, filename) {\r\n\tif(!isValidLanguage(language) || !isValidFolder(folder)) return false;\r\n\tif(!isValidAltName(altname) || !isValidFilename(filename, language, folder)) return false;\r\n\tif(altnameindex.count >= baselimits.maxCount) return false;\r\n\r\n\tif(!altnameindex[language])\r\n\t\taltnameindex[language] = {};\r\n\tif(!altnameindex[language][folder])\r\n\t\taltnameindex[language][folder] = {};\r\n\taltnameindex[language][folder][altname]\t= filename;\r\n\taltnameindex.count++;\r\n\treturn true;\r\n}\r\n\r\naltnames.removeAltNames = function(language, folder, altname) {\r\n\tif(!isValidLanguage(language) || !isValidFolder(folder)) return false;\r\n\tif(typeof altname !== 'undefined' && typeof altname !== 'string') return false;\r\n\r\n\ttry {\r\n\t\tif(altname !== undefined) {\r\n\t\t\taltnameindex.count--;\r\n\t\t\tdelete altnameindex[language][folder][altname];\r\n\t\t} else {\r\n\t\t\taltnameindex.count -= Object.keys(altnameindex[language][folder]).length;\r\n\t\t\tdelete altnameindex[language][folder];\r\n\t\t}\r\n\r\n\t\tif(isEmpty(altnameindex[language][folder])) delete altnameindex[language][folder];\r\n\t\tif(isEmpty(altnameindex[language])) delete altnameindex[language];\r\n\t} catch(e) {}\r\n\treturn true;\r\n}\r\n\r\n// get string[] of all altnames for a language/folder. empty array if doesn't exist.\r\naltnames.getAltNamesList = function(language, folder) {\r\n\tif(altnameindex[language] && altnameindex[language][folder])\r\n\t\treturn Object.keys(altnameindex[language][folder]);\r\n\telse\r\n\t\treturn [];\r\n}\r\n\r\naltnames.getFilename = function(language, folder, altname) {\r\n\tif(altnameindex[language] && altnameindex[language][folder] && altnameindex[language][folder][altname])\r\n\t\treturn altnameindex[language][folder][altname];\r\n\telse\r\n\t\treturn undefined;\r\n}\r\n\r\n// add default altnames\r\naltnames.addAltName('English', 'characters', 'Childe', 'tartaglia');\r\naltnames.addAltName('English', 'talents', 'Childe', 'tartaglia');\r\naltnames.addAltName('English', 'constellations', 'Childe', 'tartaglia');\r\n\r\naltnames.addAltName('English', 'characters', 'Baal', 'raidenshogun');\r\naltnames.addAltName('English', 'talents', 'Baal', 'raidenshogun');\r\naltnames.addAltName('English', 'constellations', 'Baal', 'raidenshogun');\r\n\r\naltnames.addAltName('English', 'talents', 'Anemo Traveler', 'traveleranemo');\r\naltnames.addAltName('English', 'talents', 'Electro Traveler', 'travelerelectro');\r\naltnames.addAltName('English', 'talents', 'Geo Traveler', 'travelergeo');\r\naltnames.addAltName('English', 'constellations', 'Anemo Traveler', 'traveleranemo');\r\naltnames.addAltName('English', 'constellations', 'Electro Traveler', 'travelerelectro');\r\naltnames.addAltName('English', 'constellations', 'Geo Traveler', 'travelergeo');\r\n\r\nmodule.exports = altnames;","const helper = {};\r\n\r\n\r\nhelper.makeFilename = function(str) {\r\n\tstr = str.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n\treturn str.toLowerCase().replace(/[^a-z]/g,'');\r\n}\r\n\r\n\r\n/**\r\n * english only :(\r\n */\r\nhelper.substat = function(substat, subvalue) {\r\n\tif(subvalue === undefined) return;\r\n\treturn substat.replace(/([^%]*)(%?)/, `$1 ${subvalue}$2`)\r\n}\r\n\r\n/**\r\n * If you're too lazy to make your own String.format function, then use this one.\r\n * replaces {0} etc with values. can separate with slashes\r\n */\r\nhelper.effect = function(effect, ...numbers) {\r\n\tif(effect === undefined || numbers.length === 0) return;\r\n\r\n\tfor(let i = 0; i < numbers[0].length; i++) {\r\n\t\tlet values = numbers.reduce((acc, curr) => {\r\n\t\t\tif(acc !== \"\") acc += '/';\r\n\t\t\treturn acc + curr[i];\r\n\t\t}, \"\");\r\n\t\teffect = effect.replace(new RegExp(`\\\\{${i}\\\\}`, 'g'), values);\r\n\t}\r\n\treturn effect;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nmodule.exports = helper;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Content, FlexboxGrid } from 'rsuite';\r\n\r\nimport CharactersList from './CharactersList';\r\nimport CharacterInfo from './CharacterInfo';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nlet charactersDB = {};\r\nconst allCharas = genshindb.talents('names', { matchCategories: true });\r\nfor (let i = 0; i < allCharas.length; i++) {\r\n  const name = allCharas[i];\r\n  const key = name.replace(/[\\s]+/g, \"_\").replace(/[\\(\\)]+/g, \"\");\r\n  if (name.includes(\"Traveler\")) {\r\n    charactersDB[key] = {\r\n      ...genshindb.characters(\"Aether\"),\r\n      element: name.match(/\\((.*)\\)/)[1]\r\n    };\r\n  } else {\r\n    charactersDB[key] = { ...genshindb.characters(name) };\r\n  }\r\n  charactersDB[key].talentName = name;\r\n}\r\n\r\nlet imageCount = {\r\n  card: [],\r\n  cover1: [],\r\n  cover2: [],\r\n  \"hoyolab-avatar\": [],\r\n  image: [],\r\n  portrait: []\r\n};\r\nfor (const key in charactersDB) {\r\n  const element = charactersDB[key];\r\n  for (const iKey in imageCount) {\r\n    if (!element.images.hasOwnProperty(iKey)) {\r\n      imageCount[iKey].push(key);\r\n    }\r\n  }\r\n}\r\n\r\nconst Characters = observer(class extends React.PureComponent {\r\n  render() {\r\n    const {\r\n      match, history\r\n    } = this.props;\r\n    const data = charactersDB[match.params.characterID];\r\n    return <Content className=\"content\">\r\n      <FlexboxGrid justify=\"center\">\r\n        {\r\n          data ? <CharacterInfo data={data} />\r\n            : <CharactersList charactersDB={charactersDB} history={history} />\r\n        }\r\n\r\n      </FlexboxGrid>\r\n    </Content>\r\n\r\n  }\r\n})\r\n\r\nexport default Characters;","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\nimport { Navbar, Nav, Button, Icon } from 'rsuite';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst barHeight = 56;\r\n\r\nconst NavLinks = ({ onClick }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Nav.Item eventKey=\"/characters\" componentClass={Link} to=\"/characters\" onClick={onClick}>\r\n        Characters\r\n      </Nav.Item>\r\n      <Nav.Item eventKey=\"/weapons\" componentClass={Link} to=\"/weapons\" onClick={onClick}>\r\n        Weapons\r\n      </Nav.Item>\r\n      <Nav.Item eventKey=\"/useful-info\" componentClass={Link} to=\"/useful-info\" onClick={onClick}>\r\n        Useful Info\r\n      </Nav.Item>\r\n      <Nav.Item eventKey=\"/about\" componentClass={Link} to=\"/about\" onClick={onClick}>\r\n        About\r\n      </Nav.Item>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nconst NavBar = observer(class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n      top: 0\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"scroll\", this.onWindowScroll);\r\n    this.prevScroll = window.pageYOffset;\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.onWindowScroll);\r\n  }\r\n  toggleMenu = () => {\r\n    this.setState({ showMenu: !this.state.showMenu });\r\n  }\r\n  onWindowScroll = () => {\r\n    const currentScroll = window.pageYOffset;\r\n    const delta = currentScroll - this.prevScroll;\r\n    if (Math.abs(delta) < 5) return;\r\n    const hide = delta < 0;\r\n    this.setState({ top: hide ? 0 : -barHeight });\r\n    this.prevScroll = currentScroll;\r\n  }\r\n  render() {\r\n    const {\r\n      showMenu, top\r\n    } = this.state;\r\n    const {\r\n      isXS\r\n    } = this.props.store;\r\n    const activeKey = this.props.location.pathname;\r\n    const barStyle = {\r\n      height: barHeight,\r\n      top\r\n    }\r\n    const linksStyle = {\r\n      top: barHeight + top\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          isXS &&\r\n          <Nav className={\"navToggle \" + (showMenu ? \"visible\" : \"\")} style={linksStyle} vertical>\r\n            <NavLinks onClick={this.toggleMenu} {...{ activeKey }} />\r\n          </Nav>\r\n        }\r\n        <Navbar className=\"navbar\" style={barStyle}>\r\n          <Navbar.Body>\r\n            {\r\n              !isXS ?\r\n                <Nav >\r\n                  <NavLinks {...{ activeKey }} />\r\n                </Nav> :\r\n                <Navbar.Header style={{ padding: \"8px 10px\" }}>\r\n                  <Button appearance=\"subtle\" onClick={this.toggleMenu}>\r\n                    <Icon icon=\"bars\" size=\"2x\" />\r\n                  </Button>\r\n                </Navbar.Header>\r\n            }\r\n          </Navbar.Body>\r\n        </Navbar>\r\n        <div style={{ height: barHeight }} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n});\r\n\r\nexport default NavBar;","import React from 'react';\r\n\r\nimport '../css/icons.css';\r\n\r\nconst ImgIcon = ({ src, size, height, className, onClick, img, alt }) => {\r\n  size = Number(size) || 24;\r\n  let style = {\r\n    width: size + \"px\",\r\n    height: size + \"px\"\r\n  }\r\n  // if (img) {\r\n  //   style.backgroundImage = \"url(\" + src + \")\";\r\n  // }\r\n  className = (className || \"\") + \" icon \";\r\n  if (onClick) className += \" button\";\r\n  if (img) {\r\n    style.height = height || \"auto\";\r\n    return <img\r\n      src={src}\r\n      className={className}\r\n      style={style}\r\n      title={alt}\r\n      alt={alt}\r\n      onClick={onClick}\r\n    />\r\n  }\r\n  return <i\r\n    className={className + src}\r\n    style={style}\r\n    title={alt}\r\n    onClick={onClick}\r\n  />\r\n}\r\n\r\nexport default ImgIcon;","import React from 'react';\r\nimport { Nav } from 'rsuite';\r\n\r\n\r\nclass Tags extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: props.defaultSelected\r\n    }\r\n  }\r\n\r\n  onSelect = (newValue) => {\r\n    let tags = [...this.state.selected];\r\n    let tagIndex = tags.indexOf(newValue);\r\n    if (tagIndex >= 0 && tags.length === 1) {\r\n      tags.splice(tagIndex, 1);\r\n    } else if (tagIndex >= 0) {\r\n      tags = [newValue];\r\n    } else {\r\n      tags.push(newValue);\r\n    }\r\n    this.setState({ selected: tags });\r\n    if (this.props.onChange instanceof Function) this.props.onChange(tags)\r\n  }\r\n\r\n  render() {\r\n    const { list } = this.props;\r\n    const { selected } = this.state;\r\n    let blocks = [];\r\n    for (const key in list) {\r\n      let isActive = true;\r\n      if (Array.isArray(selected)) {\r\n        isActive = selected.length === 0 || selected.indexOf(key) >= 0;\r\n      } else {\r\n        isActive = key === selected;\r\n      }\r\n      blocks.push(\r\n        <Nav.Item eventKey={key} key={\"TAGS.\" + key} className=\"tags\" active={isActive}>\r\n          {list[key] instanceof Function ? list[key](isActive) : list[key]}\r\n        </Nav.Item>\r\n      )\r\n    }\r\n\r\n    return <Nav className=\"tags\" appearance=\"subtle\" onSelect={this.onSelect}>\r\n      {blocks}\r\n    </Nav>\r\n  }\r\n}\r\nexport default Tags;","import Tags from \"./Tags\";\r\nimport ImgIcon from \"../Icon\";\r\n\r\nconst visionList = {\r\n  \"Anemo\": (active) => <ImgIcon src=\"element anemo\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Cryo\": (active) => <ImgIcon src=\"element cryo\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  // \"dendro\": <ImgIcon src=\"element dendro\" size=\"48\" />,\r\n  \"Electro\": (active) => <ImgIcon src=\"element electro\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Geo\": (active) => <ImgIcon src=\"element geo\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Hydro\": (active) => <ImgIcon src=\"element hydro\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Pyro\": (active) => <ImgIcon src=\"element pyro\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />\r\n}\r\n\r\nconst VisionTags = ({ defaultSelected, onChange }) => {\r\n  return <Tags\r\n    list={visionList}\r\n    defaultSelected={defaultSelected}\r\n    onChange={onChange}\r\n  />\r\n}\r\n\r\nexport default VisionTags;","import Tags from \"./Tags\";\r\nimport ImgIcon from \"../Icon\";\r\n\r\nconst weaponList = {\r\n  \"Sword\": (active) => <ImgIcon src=\"wtype sword\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Claymore\": (active) => <ImgIcon src=\"wtype claymore\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Polearm\": (active) => <ImgIcon src=\"wtype polearm\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Bow\": (active) => <ImgIcon src=\"wtype bow\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n  \"Catalyst\": (active) => <ImgIcon src=\"wtype catalyst\" size=\"48\" className={active ? \"enabled\" : \"disabled\"} />,\r\n}\r\n\r\n\r\nconst WeaponTags = ({ defaultSelected, onChange }) => {\r\n  return <Tags\r\n    list={weaponList}\r\n    defaultSelected={defaultSelected}\r\n    onChange={onChange}\r\n  />\r\n}\r\n\r\nexport default WeaponTags;","import Tags from \"./Tags\";\r\n\r\nconst characterRarityList = {\r\n  \"4\": \"4-Star\",\r\n  \"5\": \"5-Star\"\r\n}\r\n\r\nconst CharacterRarityTags = ({ defaultSelected, onChange }) => {\r\n  return <Tags\r\n    list={characterRarityList}\r\n    defaultSelected={defaultSelected}\r\n    onChange={onChange}\r\n  />\r\n}\r\n\r\nexport default CharacterRarityTags;","import react from 'react';\r\nimport React from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\n\r\nclass Utils {\r\n  FormatNumber(val) {\r\n    return Math.round(val);\r\n  }\r\n\r\n  FormatPercent(val) {\r\n    return this.FormatNumber(val * 100);\r\n  }\r\n\r\n  Format(val, type) {\r\n    if (type.includes(\"P\")) val *= 100;\r\n    if (type.includes(\"F1\")) {\r\n      val *= 10;\r\n      val = Math.round(val) / 10;\r\n    } else {\r\n      val = Math.round(val);\r\n    }\r\n    if (type.includes(\"P\")) val += \"%\";\r\n    return val;\r\n  }\r\n\r\n  StringFormat(effect, numbers) {\r\n    if (effect === undefined || numbers.length === 0) return effect;\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      const reg = new RegExp(`\\\\{${i}\\\\}`, 'g');\r\n      const sub = `**${numbers[i]}**`;\r\n      effect = effect.replace(reg, sub);\r\n    }\r\n    return effect;\r\n  }\r\n\r\n  FormatWSub(value, substat) {\r\n    if (!value && value !== 0) return \"N/A\";\r\n    const isPercent = substat !== \"Elemental Mastery\";\r\n    const sub = this.Format(value, isPercent ? \"P\" : \"I\");\r\n    return sub;\r\n  }\r\n\r\n  SimilarMaterial(a, b) {\r\n    // false if 1 is a crown\r\n    if (a.sortorder === 1856 || b.sortorder === 1856) return false;\r\n    if (Math.abs(a.sortorder - b.sortorder) > 1) return false;\r\n    if (a.rarity === b.rarity) return false;\r\n    // check name?\r\n    return true;\r\n  }\r\n\r\n\r\n  Markdown(string) {\r\n    return <ReactMarkdown>\r\n      {string.replaceAll(\"\\n\", \"  \\n\")}\r\n    </ReactMarkdown>\r\n  }\r\n\r\n  Redirect(history, loc) {\r\n    const location = {\r\n      pathname: loc,\r\n      state: { fromDashboard: true }\r\n    }\r\n    history.push(location);\r\n  }\r\n\r\n  isPlainObject(obj) {\r\n    if (react.isValidElement(obj)) {\r\n      return false;\r\n    }\r\n    // Basic check for Type object that's not null\r\n    if (typeof obj == 'object' && obj !== null) {\r\n\r\n      // If Object.getPrototypeOf supported, use it\r\n      if (typeof Object.getPrototypeOf == 'function') {\r\n        var proto = Object.getPrototypeOf(obj);\r\n        return proto === Object.prototype || proto === null;\r\n      }\r\n\r\n      // Otherwise, use internal class\r\n      // This should be reliable as if getPrototypeOf not supported, is pre-ES5\r\n      return Object.prototype.toString.call(obj) === '[object Object]';\r\n    }\r\n\r\n    // Not an object\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nexport default new Utils();","import React from 'react';\r\nimport { InputGroup, Input, Icon, FlexboxGrid } from 'rsuite';\r\n\r\nimport genshindb from 'genshin-db'\r\n\r\nimport ImgIcon from '../Icon';\r\nimport VisionTags from '../Tags/VisionTags';\r\nimport WeaponTags from '../Tags/WeaponTags';\r\nimport CharacterRarityTags from '../Tags/CharacterRarityTags';\r\nimport { Link } from 'react-router-dom';\r\nimport Utils from '../../Utils';\r\n\r\nclass CharactersList extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visions: [],\r\n      weapons: [],\r\n      rarity: [],\r\n      search: \"\"\r\n    }\r\n\r\n  }\r\n  onSearch = (search) => {\r\n    this.setState({ search });\r\n  }\r\n  setVisions = (newTags) => {\r\n    this.setState({ \"visions\": newTags });\r\n  }\r\n  setWeapons = (newTags) => {\r\n    this.setState({ \"weapons\": newTags });\r\n  }\r\n  setRarity = (newTags) => {\r\n    this.setState({ \"rarity\": newTags });\r\n  }\r\n  charaRender = (key, data) => {\r\n    const { rarity, weapontype, element, talentName, costs } = data;\r\n    const allCosts = {\r\n      ...costs,\r\n      ...genshindb.talents(talentName).costs\r\n    };\r\n    let lvlMats = {};\r\n    for (const cKey in allCosts) {\r\n      for (let i = 0; i < allCosts[cKey].length; i++) {\r\n        const item = genshindb.materials(allCosts[cKey][i].name);\r\n        let mType = item.materialtype.replace(/\\(.*\\)\\s*/, \"\").trim();\r\n        if ([\"Character Level-Up Material\", \"Talent Level-Up Material\"].includes(mType)) {\r\n          lvlMats[item.name] = item;\r\n        }\r\n      }\r\n    }\r\n    let lvlMatsSorted = Object.values(lvlMats).sort((a, b) => a.sortorder - b.sortorder);\r\n    let prev;\r\n    for (let i = lvlMatsSorted.length - 1; i >= 0; i--) {\r\n      let current = lvlMatsSorted[i];\r\n      if (prev && Utils.SimilarMaterial(current, prev)) {\r\n        lvlMatsSorted.splice(i, 1);\r\n      }\r\n      prev = current;\r\n    }\r\n    let mats = [];\r\n    for (let i = 0; i < lvlMatsSorted.length; i++) {\r\n      const mat = lvlMatsSorted[i];\r\n      mats.push(<a href={mat.url.fandom} target=\"_blank\" rel=\"noreferrer\" key={\"lvlmaterial-\" + i}>\r\n        <img\r\n          src={mat.images.fandom}\r\n          style={{ maxWidth: \"32px\" }}\r\n          alt={mat.name}\r\n        />\r\n      </a>);\r\n    }\r\n\r\n    const className = \"itemWrapper character rarity\" + rarity;\r\n    const style = {\r\n      width: \"124px\"\r\n    }\r\n    let stars = [];\r\n    for (let i = 0; i < rarity; i++) {\r\n      stars.push(<Icon key={\"star\" + i} icon=\"star\" />)\r\n    }\r\n    return <FlexboxGrid.Item key={\"character_\" + key} className={className} style={style}>\r\n      <div className=\"item\">\r\n        <div className=\"header\">\r\n          <Link to={\"characters/\" + key}>\r\n            {data.talentName}\r\n          </Link>\r\n        </div>\r\n        <div className=\"header rarity\">\r\n          {stars}\r\n        </div>\r\n        <Link to={\"characters/\" + key}>\r\n          <ImgIcon src={data.images.icon} img size=\"124\" height=\"124px\" />\r\n        </Link>\r\n\r\n        <FlexboxGrid className=\"header\">\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <ImgIcon src={\"element \" + element.toLowerCase()} size=\"32\" />\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            <ImgIcon src={\"wtype \" + weapontype.toLowerCase()} size=\"32\" />\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n\r\n        <FlexboxGrid className=\"header\">\r\n          <FlexboxGrid.Item colspan={24}>\r\n            {mats}\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      </div>\r\n    </FlexboxGrid.Item>\r\n  }\r\n  render() {\r\n    const { charactersDB } = this.props;\r\n    const { visions, weapons, rarity, search } = this.state;\r\n    let blocks = [];\r\n    for (const charaName in charactersDB) {\r\n      const data = charactersDB[charaName];\r\n      if (!data.talentName.toLowerCase().includes(search.toLowerCase())) continue;\r\n      if (rarity.length > 0 && !rarity.includes(data.rarity)) continue;\r\n      if (visions.length > 0 && !visions.includes(data.element)) continue;\r\n      if (weapons.length > 0 && !weapons.includes(data.weapontype)) continue;\r\n      blocks.push(this.charaRender(charaName, data));\r\n    }\r\n    return <React.Fragment>\r\n      <VisionTags\r\n        defaultSelected={visions}\r\n        onChange={this.setVisions}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} />\r\n      <WeaponTags\r\n        defaultSelected={weapons}\r\n        onChange={this.setWeapons}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} />\r\n      <CharacterRarityTags\r\n        defaultSelected={rarity}\r\n        onChange={this.setRarity}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} >\r\n        <InputGroup className=\"search\">\r\n          <Input value={search} onChange={this.onSearch} />\r\n          <InputGroup.Addon>\r\n            <Icon icon=\"search\" />\r\n          </InputGroup.Addon>\r\n        </InputGroup>\r\n      </FlexboxGrid.Item>\r\n      {blocks}\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nexport default CharactersList;","import { FlexboxGrid, Col } from 'rsuite';\r\nimport Utils from '../../Utils';\r\n\r\nconst CharacterInfoHeader = ({ data }) => {\r\n  const displayData = {\r\n    \"Rarity\": data.rarity,\r\n    \"Element\": data.element,\r\n    \"Weapon Type\": data.weapontype,\r\n    \"Gender\": data.gender,\r\n    \"Body Type\": data.body,\r\n    \"Birthday\": data.birthday,\r\n    \"Region\": data.region,\r\n    \"Affiliation\": data.affiliation,\r\n    \"Constellation\": data.constellation,\r\n    \"CV\": data.cv,\r\n    \"Fandom\": data.url.fandom ? <a href={data.url.fandom} >{data.url.fandom}</a> : \"\"\r\n  };\r\n  let rows = [];\r\n  let i = 0;\r\n  for (const key in displayData) {\r\n    let value = displayData[key];\r\n    const isOdd = i % 2 === 1;\r\n    if (Utils.isPlainObject(value)) {\r\n      let tempValue = [];\r\n      for (const key2 in value) {\r\n        if (Object.hasOwnProperty.call(value, key2)) {\r\n          tempValue.push(<p key={key + \":\" + key2}>\r\n            <b>{key2}</b>: {value[key2]}\r\n          </p>)\r\n        }\r\n      }\r\n      value = tempValue;\r\n    }\r\n    rows.push(\r\n      <FlexboxGrid className={\"tableRows \" + (isOdd ? \"odd\" : \"even\")} key={\"dataDisplay-\" + key}>\r\n        <FlexboxGrid.Item colspan={10}>{key}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={14}>{value}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n    i++;\r\n  }\r\n\r\n  return <FlexboxGrid className=\"infoHeader\">\r\n    <FlexboxGrid.Item componentClass={Col} colspan={24} mdHidden lgHidden>\r\n      <img\r\n        src={data.images.cover1}\r\n        alt={data.talentName}\r\n        className=\"characterCover\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"100%\"\r\n        }}\r\n      />\r\n    </FlexboxGrid.Item>\r\n\r\n    <FlexboxGrid.Item componentClass={Col} colspan={10} md={10} sm={24} xs={24}>\r\n      {rows}\r\n    </FlexboxGrid.Item>\r\n\r\n    <FlexboxGrid.Item componentClass={Col} colspan={14} md={14} xsHidden smHidden>\r\n      <img\r\n        src={data.images.cover1}\r\n        alt={data.talentName}\r\n        className=\"characterCover\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"100%\"\r\n        }}\r\n      />\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoHeader;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport Utils from '../../Utils';\r\n\r\nconst entries = [\r\n  [1, null],\r\n  [20, null], [20, \"+\"],\r\n  [40, null], [40, \"+\"],\r\n  [50, null], [50, \"+\"],\r\n  [60, null], [60, \"+\"],\r\n  [70, null], [70, \"+\"],\r\n  [80, null], [80, \"+\"],\r\n  [90, null]\r\n]\r\n\r\nconst CharacterInfoStats = ({ data }) => {\r\n  let rows = [];\r\n  let ascRows = {};\r\n  for (let i = 0; i < entries.length; i++) {\r\n    const element = entries[i];\r\n    const stats = data.stats(element[0], element[1]);\r\n    ascRows[stats.ascension] = ascRows[stats.ascension] || [];\r\n    ascRows[stats.ascension].push(stats)\r\n  }\r\n  let asc = 0;\r\n  for (const key in ascRows) {\r\n    const stats = ascRows[key];\r\n    let inner = [];\r\n    for (let j = 0; j < stats.length; j++) {\r\n      const stat = stats[j];\r\n      inner.push(<FlexboxGrid className=\"row\" key={\"ascstats\" + j}>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.level)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.hp)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.attack)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.defense)}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">{Utils.FormatNumber(stat.specialized)} %</FlexboxGrid.Item>\r\n      </FlexboxGrid>)\r\n    }\r\n    const isOdd = ++asc % 2 === 1;\r\n    const rowName = \"tableRows \" + (isOdd ? \"odd\" : \"even\");\r\n    rows.push(<FlexboxGrid className={rowName} align=\"middle\" key={\"ascRow\" + asc}>\r\n      <FlexboxGrid.Item colspan={4}>{asc}</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={20}>\r\n        {inner}\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>)\r\n  }\r\n\r\n  return <div className=\"stats\">\r\n    <h2>Base Stats</h2>\r\n    <FlexboxGrid align=\"middle\" className=\"tableRows header\">\r\n      <FlexboxGrid.Item colspan={4}>Ascension</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Level</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Base HP</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Base Attack</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Base Defense</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>{data.substat} %</FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n    {rows}\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfoStats;","import { FlexboxGrid, Table } from 'rsuite';\r\n\r\nimport ImgIcon from '../Icon';\r\nimport Utils from '../../Utils';\r\n\r\nconst { Column, HeaderCell, Cell } = Table;\r\n\r\nconst CharacterInfoTalent = ({ talentData, image }) => {\r\n  let tableData = [];\r\n  for (let i = 0; i < talentData.attributes.labels.length; i++) {\r\n    const label = talentData.attributes.labels[i];\r\n    // const rgx = label.match(/([^\\|]+)\\|{(param[0-9]+)\\:([^\\}]+)}([^\\{]*)(?:{(param[0-9]+)\\:([^\\}]+)})?/i);\r\n    const rgx = label.match(/([^\\|]+)\\|{(param[0-9]+):([^\\}]+)}([^\\{]*)(?:{(param[0-9]+):([^\\}]+)})?/i);\r\n    const param = talentData.attributes.parameters[rgx[2]];\r\n    let attrData = {\r\n      name: rgx[1]\r\n    };\r\n    for (let j = 0; j < param.length; j++) {\r\n      attrData[\"lvl\" + (j + 1)] = Utils.Format(param[j], rgx[3]) + rgx[4];\r\n    }\r\n    if (rgx[5]) {\r\n      const param2 = talentData.attributes.parameters[rgx[5]];\r\n      for (let j = 0; j < param2.length; j++) {\r\n        attrData[\"lvl\" + (j + 1)] += \" \" + Utils.Format(param2[j], rgx[3]);\r\n      }\r\n    }\r\n    tableData.push(attrData);\r\n  }\r\n  let cols = [];\r\n  for (let i = 1; i <= 15; i++) {\r\n    cols.push(<Column width={80} key={talentData.name + \"header\" + i}>\r\n      <HeaderCell>Lvl {i}</HeaderCell>\r\n      <Cell dataKey={\"lvl\" + i} />\r\n    </Column>)\r\n  }\r\n  return <FlexboxGrid className=\"talents\" >\r\n    <FlexboxGrid.Item className=\"name\" colspan={24}>\r\n      <h3>{talentData.name}</h3>\r\n    </FlexboxGrid.Item>\r\n\r\n    <FlexboxGrid className=\"desc\">\r\n      <FlexboxGrid.Item className=\"alignSelfCenter paddedSides\">\r\n        <ImgIcon src={image} img size=\"75\" />\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item className=\"flex1\">\r\n        {Utils.Markdown(talentData.info)}\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n\r\n\r\n    <FlexboxGrid.Item className=\"tabel\" colspan={24}>\r\n      <Table\r\n        data={tableData}\r\n        autoHeight\r\n        wordWrap\r\n      >\r\n        <Column minWidth={120} fixed flexGrow={1}>\r\n          <HeaderCell></HeaderCell>\r\n          <Cell dataKey=\"name\" />\r\n        </Column>\r\n        {cols}\r\n      </Table>\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoTalent;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport Utils from '../../Utils';\r\nimport ImgIcon from '../Icon';\r\n\r\nconst CharacterInfoPassive = ({ passiveData, image }) => {\r\n\r\n  return <FlexboxGrid className=\"constellations\" align=\"middle\">\r\n    <FlexboxGrid.Item className=\"paddedSides\">\r\n      <ImgIcon src={image} img size=\"50\" />\r\n    </FlexboxGrid.Item>\r\n    <FlexboxGrid.Item className=\"flex1\">\r\n      <h3>{passiveData.name}</h3>\r\n      {Utils.Markdown(passiveData.info)}\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoPassive;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport Utils from '../../Utils';\r\nimport ImgIcon from '../Icon';\r\n\r\nconst CharacterInfoConstellations = ({ constellationData }) => {\r\n  let rows = [];\r\n  for (const con in constellationData) {\r\n    if (!con.includes(\"c\")) continue;\r\n    const consData = constellationData[con];\r\n    rows.push(<FlexboxGrid align=\"middle\" className=\"constellation\" key={con}>\r\n      <FlexboxGrid.Item colspan={1}>\r\n        <b>{con}</b>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item className=\"paddedSides\">\r\n        <ImgIcon src={constellationData.images[con]} img size=\"50\" />\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item className=\"flex1\">\r\n        <h3>{consData.name}</h3>\r\n        {Utils.Markdown(consData.effect)}\r\n      </FlexboxGrid.Item>\r\n    </FlexboxGrid>)\r\n  }\r\n  return <FlexboxGrid className=\"constellations\">\r\n    <FlexboxGrid.Item colspan={24}>\r\n      <h1>Constellations</h1>\r\n    </FlexboxGrid.Item>\r\n    <FlexboxGrid.Item colspan={24}>\r\n      {rows}\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default CharacterInfoConstellations;","import React from 'react';\r\nimport { FlexboxGrid } from 'rsuite';\r\n\r\nimport '../css/icons.css';\r\n\r\nconst ItemIcon = ({ itemData, count, size, className, onClick }) => {\r\n  size = size || \"24px\";\r\n  className += \" icon\";\r\n  const style = {\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    maxWidth: size,\r\n    maxHeight: size\r\n  }\r\n  return <FlexboxGrid.Item className=\"itemWrapper\">\r\n    <div className=\"item\">\r\n      <img\r\n        src={itemData.images.fandom}\r\n        style={style}\r\n        className={className}\r\n        title={itemData.name}\r\n        alt={itemData.name}\r\n        onClick={onClick}\r\n      />\r\n      <div className=\"itemCount\">\r\n        {count}\r\n      </div>\r\n    </div>\r\n  </FlexboxGrid.Item>\r\n\r\n}\r\n\r\nexport default ItemIcon;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport ItemIcon from '../ItemIcon';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nconst CharacterInfoAscCost = ({ costs }) => {\r\n  let rows = [];\r\n  let ascI = 0;\r\n\r\n  for (const key in costs) {\r\n    const isOdd = ++ascI % 2 === 1;\r\n    const rowName = \"tableRows \" + (isOdd ? \"odd\" : \"even\");\r\n    let sort = {};\r\n    for (let j = 0; j < costs[key].length; j++) {\r\n      const item = genshindb.materials(costs[key][j].name);\r\n      const mType = item.materialtype.replace(/\\(.*\\)\\s*/, \"\").trim();\r\n      sort[mType] = sort[mType] || [];\r\n      sort[mType].push({\r\n        count: costs[key][j].count,\r\n        ...item\r\n      });\r\n    }\r\n    const render = (entry) => {\r\n      let boxes = [];\r\n      for (let k = 0; k < entry.length; k++) {\r\n        const element = entry[k];\r\n        boxes.push(\r\n          <ItemIcon\r\n            key={\"material\" + key + element.name}\r\n            itemData={element}\r\n            count={element.count}\r\n            size=\"48px\"\r\n          />\r\n        );\r\n      }\r\n      return <FlexboxGrid justify=\"center\">{boxes}</FlexboxGrid>;\r\n    }\r\n    rows.push(\r\n      <FlexboxGrid align=\"middle\" className={rowName} key={\"ascCost\" + key}>\r\n        <FlexboxGrid.Item colspan={5}>{ascI - 1} &gt; {ascI}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={5}>{sort[\"Common Currency\"][0].count}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={9}>{render(sort[\"Character Level-Up Material\"])}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={5}>{render(sort[\"Local Specialty\"])}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n\r\n  }\r\n  return <div className=\"ascCosts\" >\r\n    <h2>Ascension Costs</h2>\r\n    <FlexboxGrid align=\"middle\" className=\"tableRows header\">\r\n      <FlexboxGrid.Item colspan={5}>Ascension</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={5}>Mora</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={9}>Character Acension Materials</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={5}>Local Specialties</FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n    {rows}\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfoAscCost;","import { FlexboxGrid } from 'rsuite';\r\n\r\nimport ItemIcon from '../ItemIcon';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nconst CharacterInfoTalentCost = ({ costs }) => {\r\n  let rows = [];\r\n  let ascI = 0;\r\n\r\n  for (const key in costs) {\r\n    const title = key.replace(/[^0-9](?=[0-9])/g, \"$& \");\r\n    const isOdd = ++ascI % 2 === 1;\r\n    const rowName = \"tableRows \" + (isOdd ? \"odd\" : \"even\");\r\n    let sort = {};\r\n    for (let j = 0; j < costs[key].length; j++) {\r\n      const item = genshindb.materials(costs[key][j].name);\r\n      let mType = item.materialtype.replace(/\\(.*\\)\\s*/, \"\").trim();\r\n      if (mType !== \"Common Currency\") {\r\n        mType = \"Materials\";\r\n      }\r\n      sort[mType] = sort[mType] || [];\r\n      sort[mType].push({\r\n        count: costs[key][j].count,\r\n        ...item\r\n      });\r\n    }\r\n    const render = (entry) => {\r\n      let boxes = [];\r\n      for (let k = 0; k < entry.length; k++) {\r\n        const element = entry[k];\r\n        boxes.push(\r\n          <ItemIcon\r\n            key={\"material\" + key + element.name}\r\n            itemData={element}\r\n            count={element.count}\r\n            size=\"48px\"\r\n          />\r\n        );\r\n      }\r\n      return <FlexboxGrid>{boxes}</FlexboxGrid>;\r\n    }\r\n    rows.push(\r\n      <FlexboxGrid align=\"middle\" className={rowName} key={\"ascCost\" + key}>\r\n        <FlexboxGrid.Item colspan={5}>{title}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={5}>{sort[\"Common Currency\"][0].count}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={10} className=\"flex1\">{render(sort[\"Materials\"])}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n  }\r\n  return <div className=\"talentCosts\" >\r\n    <h2>Talent Costs</h2>\r\n    <FlexboxGrid align=\"middle\" className=\"tableRows header\">\r\n      <FlexboxGrid.Item colspan={5}>Level</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={5}>Mora</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={10} className=\"flex1\">Materials</FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n    {rows}\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfoTalentCost;","import CharacterInfoHeader from './CharacterInfoHeader';\r\nimport CharacterInfoStats from './CharacterInfoStats';\r\nimport CharacterInfoTalent from './CharacterInfoTalent';\r\nimport CharacterInfoPassive from './CharacterInfoPassive';\r\nimport CharacterInfoConstellations from './CharacterInfoConstellations';\r\nimport CharacterInfoAscCost from './CharacterInfoAscCosts';\r\nimport CharacterInfoTalentCost from './CharacterinfoTalentCosts';\r\n\r\nimport genshindb from 'genshin-db';\r\n\r\nconst CharacterInfo = ({ data }) => {\r\n  const name = data.talentName;\r\n  const talents = genshindb.talents(name);\r\n  const constellations = genshindb.constellations(name);\r\n  let passives = [];\r\n  for (const talent in talents) {\r\n    if (talent.includes(\"passive\")) {\r\n      passives.push(\r\n        <CharacterInfoPassive\r\n          key={\"passive\" + talent}\r\n          passiveData={talents[talent]}\r\n          image={talents.images[talent]}\r\n        />)\r\n    }\r\n  }\r\n  return <div className=\"characterInfo\">\r\n    <h1>{name}</h1>\r\n    <CharacterInfoHeader data={data} />\r\n    <CharacterInfoStats data={data} />\r\n    <CharacterInfoAscCost costs={data.costs} />\r\n    <h1>Talents</h1>\r\n    <CharacterInfoTalent talentData={talents.combat1} image={talents.images.combat1} />\r\n    <CharacterInfoTalent talentData={talents.combat2} image={talents.images.combat2} />\r\n    <CharacterInfoTalent talentData={talents.combat3} image={talents.images.combat3} />\r\n    <CharacterInfoTalentCost costs={talents.costs} />\r\n    <h1>Passives</h1>\r\n    {passives}\r\n    <CharacterInfoConstellations constellationData={constellations} />\r\n  </div>\r\n}\r\n\r\nexport default CharacterInfo;","import { memo } from 'react';\r\nimport { Button, Content, Icon } from 'rsuite';\r\n\r\nconst About = memo(({ onShowUpdate }) => {\r\n  return <Content className=\"content about\">\r\n    <Button onClick={onShowUpdate}>\r\n      View Changelog\r\n    </Button>\r\n\r\n    <h2>Contact</h2>\r\n\r\n    <a href=\"https://github.com/Queue-cs/Genshin\">\r\n      <Icon icon=\"github\" size=\"2x\" />&nbsp;\r\n      Queue-cs/Genshin\r\n    </a><br />\r\n\r\n    <a href=\"https://twitter.com/QueueCs\">\r\n      <Icon icon=\"twitter\" size=\"2x\" />&nbsp;\r\n      @QueueCs\r\n    </a>\r\n\r\n    <h2>Sources</h2>\r\n    <div className=\"truncate\">\r\n      <a href=\"https://genshin-impact.fandom.com/\">\r\n        https://genshin-impact.fandom.com/\r\n      </a>\r\n      <br />\r\n      <a href=\"https://github.com/theBowja/genshin-db\">\r\n        https://github.com/theBowja/genshin-db\r\n      </a>\r\n    </div>\r\n\r\n  </Content>\r\n})\r\n\r\nexport default About;","import React, { memo } from 'react';\r\n\r\nimport Utils from '../Utils';\r\nimport changeLog from '../changeLog.json';\r\nimport { FlexboxGrid, Modal } from 'rsuite';\r\n\r\nconst Updates = memo(({ show, onHide }) => {\r\n  let blocks = [];\r\n  for (const key in changeLog) {\r\n    if (Object.hasOwnProperty.call(changeLog, key)) {\r\n      const value = changeLog[key];\r\n      if (key === \"currentVersion\") continue;\r\n      blocks.push(<FlexboxGrid className=\"row\" key={\"update\" + key}>\r\n        <FlexboxGrid.Item colspan={4}>{key}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={20}>{Utils.Markdown(value)}</FlexboxGrid.Item>\r\n      </FlexboxGrid>)\r\n    }\r\n  }\r\n  return <Modal show={show} onHide={onHide} className=\"updates\">\r\n    <Modal.Header>\r\n      <Modal.Title>Change log</Modal.Title>\r\n    </Modal.Header>\r\n    <Modal.Body>\r\n      <h3>Version {changeLog.currentVersion}</h3>\r\n      {blocks}\r\n    </Modal.Body>\r\n  </Modal>\r\n})\r\n\r\nexport default Updates;","import Tags from \"./Tags\";\r\n\r\nconst weaponRarityList = {\r\n  \"1\": \"1-Star\",\r\n  \"2\": \"2-Star\",\r\n  \"3\": \"3-Star\",\r\n  \"4\": \"4-Star\",\r\n  \"5\": \"5-Star\"\r\n}\r\n\r\nconst WeaponRarityTags = ({ defaultSelected, onChange }) => {\r\n  return <Tags\r\n    list={weaponRarityList}\r\n    defaultSelected={defaultSelected}\r\n    onChange={onChange}\r\n  />\r\n}\r\n\r\nexport default WeaponRarityTags;","import React from 'react';\r\nimport { InputGroup, Input, Icon, FlexboxGrid, Col } from 'rsuite';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport WeaponRarityTags from '../Tags/WeaponRarityTags';\r\nimport WeaponTags from '../Tags/WeaponTags';\r\nimport genshindb from 'genshin-db';\r\n\r\nimport Utils from '../../Utils';\r\n\r\nclass WeaponsList extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: [],\r\n      weapons: [],\r\n      rarity: [],\r\n      search: \"\",\r\n      rarityAsc: false,\r\n      baseAsc: false\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.updateSort();\r\n  }\r\n  updateSort = () => {\r\n    // TODO: merge tag sorting into here\r\n    const { weaponsDB } = this.props;\r\n    const { rarityAsc, baseAsc } = this.state;\r\n    let list = [];\r\n    for (const key in weaponsDB) {\r\n      if (Object.hasOwnProperty.call(weaponsDB, key)) {\r\n        const wList = [...weaponsDB[key]].sort((a, b) => {\r\n          let delta = 0;\r\n          const deltaRarity = a.rarity - b.rarity;\r\n          const lvl90a = a.stats(90) || a.stats(70);\r\n          const lvl90b = b.stats(90) || b.stats(70);\r\n          const deltaBase = lvl90a.attack - lvl90b.attack;\r\n          delta = deltaRarity * (rarityAsc ? 1 : -1);\r\n          if (delta === 0) {\r\n            if (baseAsc) {\r\n              delta = deltaBase;\r\n            } else {\r\n              delta = -deltaBase;\r\n            }\r\n          }\r\n          return delta;\r\n        });\r\n        for (let i = 0; i < wList.length; i++) {\r\n          list.push(wList[i]);\r\n        }\r\n      }\r\n    }\r\n    this.setState({ list });\r\n  }\r\n  onSearch = (search) => {\r\n    this.setState({ search });\r\n  }\r\n  setWeapons = (newTags) => {\r\n    this.setState({ \"weapons\": newTags });\r\n  }\r\n  setRarity = (newTags) => {\r\n    this.setState({ \"rarity\": newTags });\r\n  }\r\n  weaponRender = (key, data) => {\r\n    const { rarity, effect, effectname, stats, substat, subvalue, baseatk, r1, costs } = data;\r\n    const className = \"row weapon rarity\" + rarity;\r\n    let stars = [];\r\n    for (let i = 0; i < rarity; i++) {\r\n      stars.push(<Icon key={\"star\" + i} icon=\"star\" />)\r\n    }\r\n    const lvl90 = stats(90) || stats(70);\r\n    const baseAtk90 = Math.round(lvl90.attack) || \"\";\r\n    const isPercent = substat !== \"Elemental Mastery\";\r\n    const sub90 = Utils.FormatWSub(lvl90.specialized, substat);\r\n    const subSuffix = isPercent ? \"%\" : \"\";\r\n    const style = {\r\n      width: \"auto\",\r\n      height: \"auto\",\r\n      maxWidth: \"100%\",\r\n      maxHeight: \"100%\"\r\n    }\r\n    const lvlMats = Object.values(costs).slice(-1)[0];\r\n    const mats = [];\r\n    for (let i = 0; i < lvlMats.length; i++) {\r\n      const mat = genshindb.materials(lvlMats[i].name);\r\n      if ([\"Character Level-Up Material\", \"Weapon Ascension Material\"].includes(mat.materialtype)) {\r\n        mats.push(<a href={mat.url.fandom} target=\"_blank\" rel=\"noreferrer\" key={\"lvlmaterial-\" + i}>\r\n          <img\r\n            src={mat.images.fandom}\r\n            style={{ maxWidth: \"32px\" }}\r\n            alt={mat.name}\r\n          />\r\n        </a>)\r\n      }\r\n    }\r\n\r\n    return <FlexboxGrid.Item key={\"weapon_\" + key} className={className} colspan={24}>\r\n      <FlexboxGrid align=\"middle\" className=\"container\">\r\n        <FlexboxGrid.Item colspan={3} style={{ maxWidth: \"64px\" }}>\r\n          <Link to={'/weapons/' + key}>\r\n            <img\r\n              src={data.images.icon}\r\n              style={style}\r\n              title={data.name}\r\n              alt={data.name}\r\n            />\r\n          </Link>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={4} style={{ minWidth: \"125px\" }}>\r\n          <Link to={'/weapons/' + key}>{data.name}</Link>\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={2}>\r\n          {stars}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={2} style={{ minWidth: \"75px\" }}>\r\n          {baseatk} ({baseAtk90})\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={2} style={{ minWidth: \"75px\" }}>\r\n          {substat} {subvalue}{subSuffix} ({sub90})\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\" componentClass={Col} xsHidden smHidden>\r\n          <span className=\"effectName\">{effectname}</span>\r\n          {Utils.Markdown(Utils.StringFormat(effect, r1) || \"\")}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\" style={{ maxWidth: \"103px\", width: \"10%\" }}>\r\n          {mats}\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    </FlexboxGrid.Item>\r\n  }\r\n  toggleBaseAsc = () => {\r\n    this.setState({\r\n      baseAsc: !this.state.baseAsc\r\n    }, this.updateSort)\r\n  }\r\n  toggleRarityAsc = () => {\r\n    this.setState({\r\n      rarityAsc: !this.state.rarityAsc\r\n    }, this.updateSort)\r\n  }\r\n  render() {\r\n    const { list, weapons, rarity, search, rarityAsc, baseAsc } = this.state;\r\n    let blocks = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n      const data = list[i];\r\n      if (!data.name.toLowerCase().includes(search.toLowerCase())) continue;\r\n      if (rarity.length > 0 && !rarity.includes(data.rarity)) continue;\r\n      if (weapons.length > 0 && !weapons.includes(data.weapontype)) continue;\r\n      blocks.push(this.weaponRender(data.wepKey, data));\r\n    }\r\n    return <React.Fragment>\r\n      <WeaponTags\r\n        defaultSelected={weapons}\r\n        onChange={this.setWeapons}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} />\r\n      <WeaponRarityTags\r\n        defaultSelected={rarity}\r\n        onChange={this.setRarity}\r\n      />\r\n      <FlexboxGrid.Item colspan={24} >\r\n        <InputGroup className=\"search\">\r\n          <Input value={search} onChange={this.onSearch} />\r\n          <InputGroup.Addon>\r\n            <Icon icon=\"search\" />\r\n          </InputGroup.Addon>\r\n        </InputGroup>\r\n      </FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={24} className=\"weaponList\">\r\n        <FlexboxGrid.Item colspan={24} className=\"row weapon header\"  >\r\n          <FlexboxGrid className=\"container\" align=\"middle\">\r\n            <FlexboxGrid.Item colspan={3} style={{ maxWidth: \"64px\" }}>\r\n              Icon\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item colspan={4} style={{ minWidth: \"125px\" }}>\r\n              Name\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item colspan={2} className=\"pointer\" onClick={this.toggleRarityAsc} >\r\n              Rarity <Icon icon={rarityAsc ? \"arrow-up-line\" : \"arrow-down-line\"} />\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item colspan={2} className=\"pointer\" style={{ minWidth: \"75px\" }} onClick={this.toggleBaseAsc} >\r\n              Base ATK (Max Lvl) <Icon icon={baseAsc ? \"arrow-up-line\" : \"arrow-down-line\"} />\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item colspan={2} style={{ minWidth: \"75px\" }}>\r\n              2nd Stat (Max Lvl)\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item className=\"flex1\" componentClass={Col} xsHidden smHidden>\r\n              Passive\r\n            </FlexboxGrid.Item>\r\n            <FlexboxGrid.Item className=\"flex1\" style={{ maxWidth: \"103px\", width: \"10%\" }}>\r\n              Materials\r\n            </FlexboxGrid.Item>\r\n          </FlexboxGrid>\r\n        </FlexboxGrid.Item>\r\n        {blocks}\r\n      </FlexboxGrid.Item>\r\n\r\n    </React.Fragment>\r\n  }\r\n}\r\n\r\nexport default WeaponsList;","import { FlexboxGrid, Col } from 'rsuite';\r\nimport Utils from '../../Utils';\r\n\r\nconst WeaponInfoHeader = ({ data }) => {\r\n  const displayData = {\r\n    \"Weapon Type\": data.weapontype,\r\n    \"Rarity\": data.rarity,\r\n    \"Base Attack\": data.baseatk,\r\n    \"Secondary Stat\": data.substat,\r\n    \"Passive Name\": data.effectname,\r\n    \"Passive\": Utils.Markdown(Utils.StringFormat(data.effect, data.r1)),\r\n    \"Description\": data.description,\r\n    \"Fandom\": data.url.fandom ? <a key=\"url\" href={data.url.fandom} >{data.url.fandom}</a> : \"\"\r\n  };\r\n  let rows = [];\r\n  let i = 0;\r\n  for (const key in displayData) {\r\n    let value = displayData[key];\r\n    const isOdd = i % 2 === 1;\r\n    if (Utils.isPlainObject(value)) {\r\n      let tempValue = [];\r\n      for (const key2 in value) {\r\n        if (Object.hasOwnProperty.call(value, key2)) {\r\n          tempValue.push(<p key={key + \":\" + key2}>\r\n            <b>{key2}</b>: {value[key2]}\r\n          </p>)\r\n        }\r\n      }\r\n      value = tempValue;\r\n    }\r\n    rows.push(\r\n      <FlexboxGrid className={\"tableRows \" + (isOdd ? \"odd\" : \"even\")} key={\"dataDisplay-\" + key}>\r\n        <FlexboxGrid.Item className=\"title\" colspan={10}>{key}</FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"value\" colspan={14}>{value}</FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n    i++;\r\n  }\r\n\r\n  return <FlexboxGrid className=\"infoHeader\">\r\n    <FlexboxGrid.Item componentClass={Col}>\r\n      <img\r\n        src={data.images.icon}\r\n        alt={data.name}\r\n        className=\"characterCover\"\r\n        style={{\r\n          width: \"100%\",\r\n          maxWidth: \"100%\"\r\n        }}\r\n      />\r\n    </FlexboxGrid.Item>\r\n\r\n    <FlexboxGrid.Item componentClass={Col} className=\"flex1\">\r\n      {rows}\r\n    </FlexboxGrid.Item>\r\n\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default WeaponInfoHeader;","import React from 'react';\r\nimport { FlexboxGrid } from 'rsuite';\r\nimport Utils from '../../Utils';\r\n\r\nconst WeaponInfoRefinements = ({ data }) => {\r\n  const { effect, effectname } = data;\r\n  if (effect === \"\") return \"\";\r\n  const refinements = [data.r1, data.r2, data.r3, data.r4, data.r5];\r\n  console.log(data);\r\n  let blocks = [];\r\n  for (let i = 0; i < refinements.length; i++) {\r\n    const r = refinements[i];\r\n    if (!r) continue;\r\n    blocks.push(\r\n      <FlexboxGrid align=\"middle\" className=\"refinement\" key={\"refine\" + i}>\r\n        <FlexboxGrid.Item colspan={2}>\r\n          R{i + 1}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item colspan={22}>\r\n          {Utils.Markdown(Utils.StringFormat(effect, r))}\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n  }\r\n  return <FlexboxGrid className=\"refine\">\r\n    <FlexboxGrid.Item colspan={24}>\r\n      <h1>Refinements</h1>\r\n    </FlexboxGrid.Item>\r\n    <FlexboxGrid.Item colspan={24}>\r\n      <h3>{effectname}</h3>\r\n    </FlexboxGrid.Item>\r\n    <FlexboxGrid.Item colspan={24} className=\"refinements\">\r\n      {blocks}\r\n    </FlexboxGrid.Item>\r\n  </FlexboxGrid>\r\n}\r\n\r\nexport default WeaponInfoRefinements;","import { FlexboxGrid } from 'rsuite';\r\nimport Utils from '../../Utils';\r\nimport ItemIcon from '../ItemIcon';\r\nimport genshindb from 'genshin-db';\r\n\r\nconst lvls = [\r\n  [1, \"-\"], [5, \"-\"], [10, \"-\"], [15, \"-\"], [20, \"-\"],\r\n  [20, \"+\"], [25, \"-\"], [30, \"-\"], [35, \"-\"], [40, \"-\"],\r\n  [40, \"+\"], [45, \"-\"], [50, \"-\"],\r\n  [50, \"+\"], [55, \"-\"], [60, \"-\"],\r\n  [60, \"+\"], [65, \"-\"], [70, \"-\"],\r\n  [70, \"+\"], [75, \"-\"], [80, \"-\"],\r\n  [80, \"+\"], [85, \"-\"], [90, \"-\"]\r\n]\r\n\r\nconst WeaponInfoStats = ({ data }) => {\r\n  const { stats, substat, costs } = data;\r\n  let rows = [];\r\n  let ascRows = {};\r\n  for (let i = 0; i < lvls.length; i++) {\r\n    const element = lvls[i];\r\n    const value = stats(...element);\r\n    if (!value) break;\r\n    ascRows[value.ascension] = ascRows[value.ascension] || [];\r\n    ascRows[value.ascension].push(\r\n      <FlexboxGrid className=\"inner row \" align=\"middle\" key={\"statRow\" + i}>\r\n        <FlexboxGrid.Item className=\"flex1\">\r\n          {element[0]}{element[1] !== \"-\" ? \"+\" : \"\"}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">\r\n          {Math.round(value.attack)}\r\n        </FlexboxGrid.Item>\r\n        <FlexboxGrid.Item className=\"flex1\">\r\n          {Utils.FormatWSub(value.specialized, substat)}\r\n        </FlexboxGrid.Item>\r\n      </FlexboxGrid>\r\n    )\r\n  }\r\n  let i = 0;\r\n  for (const ascKey in ascRows) {\r\n    if (Object.hasOwnProperty.call(ascRows, ascKey)) {\r\n      const inner = ascRows[ascKey];\r\n      const costInner = [];\r\n      const cost = costs[\"ascend\" + i];\r\n      if (cost) {\r\n        for (const costKey in cost) {\r\n          if (Object.hasOwnProperty.call(cost, costKey)) {\r\n            const costE = cost[costKey];\r\n            costInner.push(\r\n              <ItemIcon\r\n                key={\"costKey-\" + ascKey + costKey}\r\n                itemData={genshindb.materials(costE.name)}\r\n                count={costE.count}\r\n                size=\"48px\"\r\n              />\r\n            );\r\n          }\r\n        }\r\n      }\r\n      const isOdd = ++i % 2 === 1;\r\n      const rowName = \"stretchCenterFlex tableRows \" + (isOdd ? \"odd\" : \"even\");\r\n      rows.push(\r\n        <FlexboxGrid className={rowName} align=\"middle\" key={\"ascRow\" + ascKey}>\r\n          <FlexboxGrid.Item colspan={4}>\r\n            {ascKey}\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={12}>\r\n            {inner}\r\n          </FlexboxGrid.Item>\r\n          <FlexboxGrid.Item colspan={8}>\r\n            <FlexboxGrid justify=\"center\">\r\n              {costInner}\r\n            </FlexboxGrid>\r\n          </FlexboxGrid.Item>\r\n        </FlexboxGrid>\r\n      )\r\n    }\r\n  }\r\n  return <div className=\"stats\">\r\n    <h2>Base Stats</h2>\r\n    <FlexboxGrid align=\"middle\" className=\"tableRows header\">\r\n      <FlexboxGrid.Item colspan={4}>Ascension</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Level</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>Base Atk</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={4}>{substat}</FlexboxGrid.Item>\r\n      <FlexboxGrid.Item colspan={8} >Ascension Costs</FlexboxGrid.Item>\r\n    </FlexboxGrid>\r\n    {rows}\r\n  </div>\r\n}\r\n\r\nexport default WeaponInfoStats;","// import genshindb from 'genshin-db';\r\n\r\nimport WeaponInfoHeader from \"./WeaponInfoHeader\";\r\nimport WeaponInfoRefinements from \"./WeaponInfoRefinements\";\r\nimport WeaponInfoStats from \"./WeaponInfoStats\";\r\n\r\nconst WeaponInfo = ({ data }) => {\r\n  const { name } = data;\r\n  return <div className=\"weaponInfo\">\r\n    <h1>{name}</h1>\r\n    <WeaponInfoHeader data={data} />\r\n    <WeaponInfoStats data={data} />\r\n    <WeaponInfoRefinements data={data} />\r\n  </div>\r\n}\r\n\r\nexport default WeaponInfo;","import React from 'react';\r\nimport { Content, FlexboxGrid } from 'rsuite';\r\n\r\nimport genshindb from 'genshin-db';\r\nimport WeaponsList from './WeaponsList';\r\nimport WeaponInfo from './WeaponInfo';\r\n\r\nconst Weapons = class extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    const allWeapons = genshindb.weapons('names', { matchCategories: true });\r\n    this.sortedDB = {\r\n      \"Sword\": [],\r\n      \"Claymore\": [],\r\n      \"Polearm\": [],\r\n      \"Bow\": [],\r\n      \"Catalyst\": []\r\n    };\r\n    this.flatDB = {};\r\n    for (let i = 0; i < allWeapons.length; i++) {\r\n      const wepName = allWeapons[i];\r\n      const wepKey = wepName.replace(/[\\s]+/g, \"_\").replace(/[\\(\\)]+/g, \"\")\r\n      const data = genshindb.weapons(wepName);\r\n      this.sortedDB[data.weapontype].push({ ...data, wepKey });\r\n      this.sortedDB[data.weapontype].sort((a, b) => {\r\n        return a.rarity - b.rarity\r\n      });\r\n    }\r\n    for (const key in this.sortedDB) {\r\n      for (let i = 0; i < this.sortedDB[key].length; i++) {\r\n        const element = this.sortedDB[key][i];\r\n        this.flatDB[element.wepKey] = element;\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      match, history\r\n    } = this.props;\r\n    const data = this.flatDB[match.params.weaponID];\r\n    return <Content className=\"content weapons\">\r\n      <FlexboxGrid justify=\"center\">\r\n        {\r\n          data ? <WeaponInfo data={data} />\r\n            : <WeaponsList weaponsDB={this.sortedDB} history={history} />\r\n        }\r\n      </FlexboxGrid>\r\n    </Content>\r\n\r\n  }\r\n}\r\n\r\nexport default Weapons;","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from 'react';\r\nimport { observer } from 'mobx-react';\r\n\r\nimport { FlexboxGrid, Container, Header, Icon } from 'rsuite';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport NavBar from './NavBar';\r\nimport Characters from './Characters/Characters';\r\nimport About from './About';\r\n\r\nimport '../css/app.css';\r\nimport Updates from './Updates';\r\nimport Weapons from './Weapons/Weapons';\r\nimport ScrollToTop from './ScrollToTop';\r\n\r\nconst App = observer(class extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showUpdates: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      showUpdates: this.props.store.outDated\r\n    })\r\n  }\r\n\r\n  onShowUpdate = () => {\r\n    this.setState({\r\n      showUpdates: true\r\n    })\r\n  }\r\n\r\n  onHideUpdate = () => {\r\n    this.setState({\r\n      showUpdates: false\r\n    })\r\n    this.props.store.ForceSave();\r\n  }\r\n\r\n  render() {\r\n    const { store } = this.props;\r\n    const isReady = store.isReady;\r\n    return (\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <ScrollToTop />\r\n        <Container>\r\n          <Header>\r\n            <Route render={routeProps => (\r\n              <NavBar store={store} {...routeProps} />\r\n            )} />\r\n          </Header>\r\n          <FlexboxGrid justify=\"center\">\r\n            {\r\n              isReady &&\r\n              <Switch>\r\n                <Route path={[\"/weapons/:weaponID?\"]} render={routeProps => (\r\n                  <Weapons store={store} {...routeProps} />\r\n                )} />\r\n                <Route path=\"/useful-info\"></Route>\r\n                <Route path=\"/about\">\r\n                  <About onShowUpdate={this.onShowUpdate} />\r\n                </Route>\r\n                <Route path=\"/schedule\">\r\n                  {/* <Content className=\"content schedule\">\r\n                  <Schedule store={store} />\r\n                </Content> */}\r\n                </Route>\r\n                <Route path={[\"/characters/:characterID?\", \"*\"]} render={routeProps => (\r\n                  <Characters store={store} {...routeProps} />\r\n                )} />\r\n\r\n              </Switch>\r\n            }\r\n            {\r\n              !isReady &&\r\n              <Icon icon=\"spinner\" spin size=\"2x\" className=\"pageLoading\" />\r\n            }\r\n          </FlexboxGrid>\r\n        </Container>\r\n        <Updates show={this.state.showUpdates} onHide={this.onHideUpdate} />\r\n      </Router>\r\n    );\r\n  }\r\n})\r\n\r\nexport default App;","import { makeAutoObservable, toJS } from \"mobx\";\r\n\r\nimport changeLog from '../changeLog.json';\r\n\r\nclass Store {\r\n  lastVisitVersion = \"0\";\r\n  windowWidth = 0;\r\n\r\n  ready = false;\r\n  needsSave = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this, { needsSave: false }, { autoBind: true });\r\n    this.Load();\r\n    setInterval(this.Save, 5000);\r\n    window.addEventListener(\"beforeunload\", () => {\r\n      this.ForceSave();\r\n    })\r\n    window.addEventListener(\"resize\", () => {\r\n      this.Update({\r\n        windowWidth: window.innerWidth\r\n      });\r\n    });\r\n    this.windowWidth = window.innerWidth;\r\n  }\r\n\r\n  Save() {\r\n    if (!this.needsSave) return;\r\n    this.needsSave = false;\r\n    localStorage.setItem(\"local\", JSON.stringify(this.toOBJ));\r\n  }\r\n\r\n  Load() {\r\n    const storedLocal = JSON.parse(localStorage.getItem(\"local\") || \"{}\");\r\n    this.FromOBJ(storedLocal);\r\n    this.ready = true;\r\n  }\r\n\r\n  Defaults() {\r\n    return {\r\n      lastVisitVersion: \"0\"\r\n    }\r\n  }\r\n\r\n  get toOBJ() {\r\n    // const data = toJS(this);\r\n    return {\r\n      lastVisitVersion: changeLog.currentVersion\r\n    }\r\n  }\r\n\r\n  FromOBJ(obj) {\r\n    let changes = this.Defaults();\r\n    for (const key in changes) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        changes[key] = obj[key];\r\n      }\r\n    }\r\n    this.Update(changes);\r\n  }\r\n\r\n  Update(state) {\r\n    for (const key in state) {\r\n      if (this.hasOwnProperty(key)) {\r\n        this[key] = state[key];\r\n      }\r\n    }\r\n    this.needsSave = true;\r\n  }\r\n\r\n  ForceSave() {\r\n    this.needsSave = true\r\n    this.Save();\r\n  }\r\n\r\n  get isXS() {\r\n    return this.windowWidth < 576;\r\n  }\r\n\r\n  get isMD() {\r\n    return this.windowWidth >= 576 && this.windowWidth < 768;\r\n  }\r\n\r\n  get isLG() {\r\n    return this.windowWidth >= 768;\r\n  }\r\n\r\n  get outDated() {\r\n    return this.lastVisitVersion !== changeLog.currentVersion;\r\n  }\r\n\r\n  get isReady() {\r\n    return this.ready;\r\n  }\r\n}\r\n\r\nexport default new Store();","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'rsuite/dist/styles/rsuite-dark.css';\n\nimport App from './components/App';\nimport Store from './store/Store';\n\n// get original url hash from github 404 redirect\n(function (location) {\n  let search = location.search;\n  if (search) {\n    const path = /path=(.*?)(?:&|$)/.exec(search);\n    let newPath = '';\n    if (path) newPath += path[1];\n    if (newPath) {\n      window.history.replaceState(null, null, '/' + newPath);\n    }\n  }\n})(window.location);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nReactDOM.render(\n  <App store={Store} />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}